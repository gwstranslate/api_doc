{
	"info": {
		"_postman_id": "cca2d91c-db1e-4596-9ab7-9108eda312ff",
		"name": "Smartup API Documentation",
		"description": "#### Overview:\n\n---\n\n> This is official \n  \n\nSmartup works with `HTTPS` protocol as well as uses **JSON** and **XML** data formats. All the requests and responses are based on `HTTP` methods.\n\n**Authorization** in the Smartup system takes place according to the **Basic Auth principle**.  \n**Basic** - the simplest scheme, in which the user's login and password are passed in the **Authorization header** in unencrypted form (_base64-encoded_). However, when using the `HTTPS` (HTTP over SSL) protocol, it is relatively secure.\n\n<img src=\"https://storage.crisp.chat/users/helpdesk/website/29775490664f3600/1_1cnfavm.png\" width=\"623\" height=\"274\">\n\n### Terms\n\n| Name | Description |\n| --- | --- |\n| Single organization | The organization, where all the appropriate entities can be adjusted. There is no access to other single organizations. |\n| Head organization | The administrative organization, where all the single organizations can be adjusted, which means there is access to manage other single organizations. |\n\n### Authorization\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| username | string | yes | Login, that is used for authorization in Smartup X |\n| password | string | yes | Password, that is used for authorization in Smartup X |\n\n### Headers\n\n| Key | Value | Description | Example |\n| --- | --- | --- | --- |\n| filial_id |  | The ID of Single Organization or Head Organization that is used to determine the organization you are going to work on. | \\- In case you choose `filial_id` of single organization, then all the requests will be based on chosen organization.  <br>\\- In case you choose `filial_id` of Head organization, then all the requests will be based on `filial_code` parameter of the request (If no `filial_code` was set, then all the requests will show the info by all organizations. |",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Inventory / Import",
			"id": "b42cfa22-ae4a-41bd-822e-fe9f0a2d96a3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "filial_id",
						"value": "86401",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"inventory\": [\r\n        {\r\n            \"code\": \"100\",\r\n            \"name\": \"Coca-cola 0.5l\",\r\n            \"short_name\": \"Coca-cola 0.5l\",\r\n            \"weight_netto\": \"0.5\",\r\n            \"weight_brutto\": \"0.65\",\r\n            \"litr\": \"0.5\",\r\n            \"box_type_code\": \"block\",\r\n            \"box_quant\": \"12\",\r\n            \"producer_code\": \"\",\r\n            \"measure_code\": \"kilogram2\",\r\n            \"state\": \"A\",\r\n            \"barcodes\": \"\",\r\n            \"order_no\": \"\",\r\n            \"article_code\": \"100\",\r\n            \"gtin\": \"\",\r\n            \"ikpu\": \"\",\r\n            \"tnved\": \"\",\r\n            \"groups\": [\r\n                {\r\n                    \"group_code\": \"Drinks\",\r\n                    \"type_code\": \"A\"\r\n                }\r\n            ],\r\n            \"inventory_kinds\": [\r\n                {\r\n                    \"inventory_kind\": \"P\"\r\n                }\r\n            ],\r\n            \"sector_codes\": [\r\n                {\r\n                    \"sector_code\": \"654321\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/inventory$import",
				"description": "The interface allows you to upload inventory data from third-party software to the Smartup. This interface supports bulk data ingestion in a single request\n\n**Request**\n\n``` json\n{\n    \"inventory\": [\n        {\n            \"code\": \"100\",\n            \"name\": \"Coca-cola 0.5l\",\n            \"short_name\": \"Coca-cola 0.5l\",\n            \"weight_netto\": \"0.5\",\n            \"weight_brutto\": \"0.65\",\n            \"litr\": \"0.5\",\n            \"box_type_code\": \"block\",\n            \"box_quant\": \"12\",\n            \"producer_code\": \"\",\n            \"measure_code\": \"kilogram2\",\n            \"state\": \"A\",\n            \"barcodes\": \"\",\n            \"order_no\": \"\",\n            \"article_code\": \"100\",\n            \"gtin\": \"\",\n            \"ikpu\": \"\",\n            \"tnved\": \"\",\n            \"groups\": [\n                {\n                    \"group_code\": \"Drinks\",\n                    \"type_code\": \"A\"\n                }\n            ],\n            \"inventory_kinds\": [\n                {\n                    \"inventory_kind\": \"P\"\n                }\n            ],\n            \"sector_codes\": [\n                {\n                    \"sector_code\": \"654321\"\n                }\n            ]\n        }\n    ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n  \"successes\": [\n    {\n      \"code\": \"100\"\n    }\n  ],\n  \"errors\": [\n  ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| inventory | array | yes | Array with data on goods and materials |\n| code | string | yes | Unique inventory code, set for integration with third-party software |\n| name | string | yes | Full name of goods and services |\n| short_name | string | no | Alternative name of goods and materials |\n| box_type_code | string | no | Unique package type code |\n| box_quant | number | no | Quantity of goods and materials in the package |\n| groups | array | no | Array with data on the characteristics of goods and materials |\n| group_code | string | no | Unique code of goods and materials characteristics |\n| type_code | string | no | The unique subtype code of the merchandise characteristic |\n| measure_code | string | yes | Unique code of the unit of measurement of the service (assigned by the system) |\n| state | string | yes | Status (Active / Inactive), where A - active, P - passive |\n| barcodes | string | no | Barcode of the inventory |\n| producer_code | string | no | Manufacturer's unique code or barcode (graphic information applied to the commodities and materials packaging, which makes it possible to read it by technical means. Several barcodes are separated by a “ |\n| weight_brutto | number | no | Weight of goods and materials including packaging |\n| weight_netto | number | no | Weight of goods and materials excluding packaging |\n| litr | number | no | Volume of goods and materials |\n| order_no | number | no | Order number in the list of inventories |\n| article_code | string | no | Article code |\n| gtin | string | no | GTIN of inventory |\n| ikpu | string | no | IKPU of inventory |\n| tnved | string | no | TN VED of inventory |\n| marking_group_code | string | no | Code of marked goods group |\n| inventory_kinds | array | yes | Array with data on types of goods and materials |\n| inventory_kind | string | yes | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| sector_codes | array | yes | Array with data on sector codes |\n| sector_code | string | yes | Unique sector code assigned for integration with third-party software |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": [
				{
					"id": "1925cbfe-1c5c-436b-bd10-35bde0b6a09e",
					"name": "Example",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inventory\": [\r\n        {\r\n            \"code\": \"100\",\r\n            \"name\": \"Coca-cola 0.5l\",\r\n            \"short_name\": \"Coca-cola 0.5l\",\r\n            \"weight_netto\": \"0.5\",\r\n            \"weight_brutto\": \"0.65\",\r\n            \"litr\": \"0.5\",\r\n            \"box_type_code\": \"block\",\r\n            \"box_quant\": \"12\",\r\n            \"producer_code\": \"\",\r\n            \"measure_code\": \"kilogram2\",\r\n            \"state\": \"A\",\r\n            \"order_no\": \"\",\r\n            \"article_code\": \"100\",\r\n            \"groups\": [\r\n                {\r\n                    \"group_code\": \"Drinks\",\r\n                    \"type_code\": \"A\"\r\n                }\r\n            ],\r\n            \"inventory_kinds\": [\r\n                {\r\n                    \"inventory_kind\": \"P\"\r\n                }\r\n            ],\r\n            \"sector_codes\": [\r\n                {\r\n                    \"sector_code\": \"654321\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://smartup.online/b/anor/mxsx/mr/inventory$import"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "text/plain;charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "78"
						},
						{
							"key": "Date",
							"value": "Tue, 10 May 2022 07:47:39 GMT"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\r\n  \"successes\": [\r\n    {\r\n      \"code\": \"100\"\r\n    }\r\n  ],\r\n  \"errors\": [\r\n  ]\r\n}\r\n"
				}
			]
		},
		{
			"name": "Inventory / Export",
			"id": "350cf854-7bd7-4f46-9d2c-2570be82ed7f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/inventory$export",
				"description": "The service exports data on inventories for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"code\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n ```\n\n**Response**\n\n``` json\n{\n  \"inventory\": [\n    {\n      \"code\": \"\",\n      \"name\": \"\",\n      \"short_name\": \"\",\n      \"box_type_code\": \"\",\n      \"box_quant\": \"\",\n      \"measure_code\": \"\",\n      \"producer_code\": \"\",\n      \"order_no\": \"\",\n      \"state\": \"\",\n      \"barcodes\":\"\",\n      \"weight_netto\": \"\",\n      \"weight_brutto\": \"\",\n      \"article_code\":\"\",\n      \"gtin\": \"\",\n      \"ikpu\": \"\",\n      \"tnved\": \"\",\n      \"litr\": \"\",\n      \"groups\": [\n        {\n          \"group_code\": \"\",\n          \"type_code\": \"\"\n        }\n      ],\n      \"inventory_kinds\": [\n        {\n          \"inventory_kind\": \"\"\n        }\n      ],\n      \"sector_codes\": [\n        {\n          \"sector_code\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\n**Description of request parameters**  \n| Parameter | Data type | Required | Description |  \n|----------------------------|---------------------------------------|-----------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  \n| code | string | No | Unique inventory code assigned by the system (allows you to select/filter inventory items by entered code) |  \n| begin_created_on | date( dd.mm.yyyy hh24:mi:ss) | No | The initial date interval for entering goods and materials into the system (allows you to filter all goods and materials entered into the system after the specified date |  \n| end_create_on | date( dd.mm.yyyy hh24:mi:ss) | No | The final date interval for entering goods and materials into the system (allows you to filter all goods and materials entered into the system before the specified date |  \n| begin_modified_on | date( dd.mm.yyyy hh24:mi:ss) | No | Start date interval for editing inventory items in the system (allows you to filter all items changed in the system later than the date set) |  \n| end_modified_on | date( dd.mm.yyyy hh24:mi:ss) | No | The final date interval for editing goods and materials in the system (allows you to filter all goods and materials changed in the system before the date set |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| inventory | array | Array with data on goods and materials |\n| code | string | Unique inventory code for integration with third-party software |\n| name | string | Complete name of goods and materials |\n| short_name | string | Alternative name of goods and materials |\n| weight_netto | number | Net weight |\n| weight_brutto | number | Gross weight |\n| litr | number | Displacement |\n| box_type_code | string | Unique package type code |\n| box_quant | number | Number of packages |\n| measure_code | string | Unique code of the unit of measurement of the service (assigned by the system) |\n| producer_code | string | Manufacturer's unique code or barcode (graphic information applied to the commodities and materials packaging, which makes it possible to read it by technical means. Several barcodes are separated by a “ |\n| order_no | number | Order number in the list of inventories |\n| state | string | Inventory status in the system (A - active, P - inactive) |\n| article_code | string | Article code |\n| gtin | string | GTIN of inventory |\n| ikpu | string | IKPU of inventory |\n| tnved | string | TN VED of inventory |\n| marking_group_code | string | Code of marked goods group |\n| groups | array | Array with data on the characteristics of goods and materials |\n| group_code | string | Unique code of goods and materials characteristics |\n| type_code | string | The unique subtype code of the merchandise characteristic |\n| inventory_kinds | array | Array with data on the type of goods and materials |\n| inventory_kind | string | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| sector_codes | array | array codes sectors |\n| sector_code | string | Sector code assigned for integration with third-party software |"
			},
			"response": [
				{
					"id": "9cdc3430-2a96-4fcf-aaa7-563b9ae912f9",
					"name": "Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://smartup.online/b/anor/mxsx/mr/inventory$export"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "text/plain;charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "36"
						},
						{
							"key": "Date",
							"value": "Wed, 18 May 2022 10:56:03 GMT"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\"inventory\":[]}"
				}
			]
		},
		{
			"name": "Service / Import",
			"id": "ec9e4d55-7318-4ae8-83d2-20e7fd733476",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"service\": [\r\n    {\r\n      \"code\": \"101\",\r\n      \"name\": \"Delivery\",\r\n      \"short_name\": \"Delivery\",\r\n      \"measure_code\": \"unit\",\r\n      \"state\": \"A\",\r\n      \"groups\": [\r\n        {\r\n          \"group_code\": \"100\",\r\n          \"type_code\": \"\"\r\n        }\r\n      ],\r\n      \"order_no\": \"\"\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/service$import",
				"description": "Through this interface, the service loads data about services into the Smartup system x . The interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"service\": [\n    {\n      \"code\": \"101\",\n      \"name\": \"Delivery\",\n      \"short_name\": \"Delivery\",\n      \"measure_code\": \"unit\",\n      \"state\": \"A\",\n      \"groups\": [\n        {\n          \"group_code\": \"100\",\n          \"type_code\": \"\"\n        }\n      ],\n      \"order_no\": \"\"\n    }\n  ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n  \"successes\": [\n  ],\n  \"errors\": [\n    {\n      \"code\": \"\",\n      \"message\": \"\"\n    }\n  ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| service | array | yes | Array with service data |\n| code | string | yes | Unique service code assigned for integration with third-party software |\n| name | string | yes | Full service name |\n| short_name | string | no | Alternative service name |\n| measure_code | string | yes | Unique code of the unit of measure for the service (assigned by the system) |\n| state | string | yes | Service status ( A - active, P - passive) |\n| groups | array | no | Array with data about the characteristics of the service |\n| group_code | string | no | Unique service characteristic code |\n| type_code | string | no | Service characteristic subtype unique code |\n| order_no | number | no | Order number in the list of services |\n\nBefore sending, the service checks the request for:\n\n• the presence of mandatory parameters;  \n• parameter validity.\n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique code records |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Service / Export",
			"id": "ee6730bf-0cef-40e3-bf81-6370d8995428",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/service$export",
				"description": "The service exports data about services for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"code\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"service\": [\n    {\n      \"code\": \"\",\n      \"name\": \"\",\n      \"short_name\": \"\",\n      \"measure_code\": \"\",\n      \"state\": \"\",\n      \"groups\": [\n        {\n          \"group_code\": \"\",\n          \"type_code\": \"\"\n        }\n      ],\n      \"order_no\": \"\"\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| code | string | no | Unique service code assigned by the user in the system (allows you to select/filter the service by the entered code) |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| service | array | Array with service data |\n| code | string | Unique service code assigned by the user in the system |\n| name | string | Name of service |\n| short_name | string | Alternative service name |\n| measure_code | string | Unique code of the unit of measure for the service (assigned by the system) |\n| state | string | Service status in the system (A - active, P - passive) |\n| groups | array | Array with data about the characteristics of the service |\n| group_code | string | Unique service characteristic code |\n| type_code | string | Service characteristic subtype unique code |\n| order_no | number | Order number in the list of services |"
			},
			"response": []
		},
		{
			"name": "Product group / Import",
			"id": "4861b4ac-b467-4f54-af96-7b154a510b29",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"product_group\": [\r\n    {\r\n      \"code\": \"\",\r\n      \"name\": \"\",\r\n      \"product_kind\": \"\",\r\n      \"state\": \"\",\r\n      \"product_group_types\": [\r\n        {\r\n          \"code\": \"\",\r\n          \"name\": \"\",\r\n          \"state\": \"\",\r\n          \"order_no\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/product_group$import",
				"description": "The interface creates the required number of new product groups, in addition to the default system groups - goods, raw materials, services, for import.\n\n**Request**\n\n``` json\n{\n  \"product_group\": [\n    {\n      \"code\": \"\",\n      \"name\": \"\",\n      \"product_kind\": \"\",\n      \"state\": \"\",\n      \"product_group_types\": [\n        {\n          \"code\": \"\",\n          \"name\": \"\",\n          \"state\": \"\",\n          \"order_no\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| product_group | array | yes | Array with product group data |\n| code | string | yes | Unique product group code assigned for integration with third-party software |\n| name | string | yes | Full name of the product group |\n| product_kind | string | yes | Product type |\n| state | string | yes | Product group status ( A - active, P - inactive) |\n| product_group_types | array | yes | Array with data about product group types |\n| code | string | yes | Unique product group type code assigned for integration with third-party software |\n| name | string | yes | Full name of the product group type |\n| state | string | yes | Product group type status ( A - active, P - passive) |\n| order_no | number | no | Order number in the list of product groups |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**  \n| Parameter | Data type | Description |  \n|------------------|------------------|------------------------------------------------------------------|  \n| successes | array | Array of successfully processed data |  \n| errors | array | Array data with errors |  \n| code | string | Unique code records |  \n| message | string | Message specifying the cause of the error from the server |"
			},
			"response": []
		},
		{
			"name": "Product group / Export",
			"id": "e315a95c-bded-4070-be22-5bc75c82f5c3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/product_group$export",
				"description": "The interface creates the required number of new product groups, in addition to the default system groups - goods, raw materials, services. Through the interface, the service exports data about the product group.\n\n**Request**\n\n``` json\n{\n  \"code\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"product_group\": [\n    {\n      \"code\": \"\",\n      \"name\": \"\",\n      \"product_kind\": \"\",\n      \"state\": \"\",\n      \"product_group_types\": [\n        {\n          \"code\": \"\",\n          \"name\": \"\",\n          \"state\": \"\",\n          \"order_no\":\"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| code | string | no | Unique product group code assigned by the user in the system (allows you to select/filter the service by the entered code) |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Product group filter by creation date |\n| end_create_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last product group creation date |\n| begin_modified_on | date( dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| product_group | array | yes | Array with product group data |\n| code | string | yes | Unique product group code assigned for integration with third-party software |\n| name | string | yes | Full name of the product group |\n| product_kind | string | yes | Type of products ( I - inventory, S - services) |\n| state | string | yes | Product group status ( A - active, P - passive) |\n| product_group_types | array | yes | Array with data about product group types |\n| code | string | yes | Unique product group type code |\n| name | string | yes | Full name of the product group type |\n| state | string | yes | Product group type status ( A - active, P - passive) |\n| order_no | number | no | Order number in the list of product groups |"
			},
			"response": []
		},
		{
			"name": "Producers / Import",
			"id": "73dc312d-5d66-425b-9a14-62ca94960d1c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"producer\": [\r\n    {\r\n      \"person_code\": \"\",\r\n      \"state\": \"\",\r\n      \"code\": \"\",\r\n      \"order_no\": \"\"\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/producer$import",
				"description": "The service imports data about the producer(s) according to the parameter values passed to the service in the request. This interface supports bulk data ingestion in a single request. To implement bulk input, it is necessary to duplicate the `producer` array in the request with the appropriate parameters the number of times you need.\n\n**Request**\n\n``` json\n{\n  \"producer\": [\n    {\n      \"person_code\": \"\",\n      \"state\": \"\",\n      \"code\": \"\",\n      \"order_no\": \"\"\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| producer | array | yes | An array containing data about the producer |\n| person_code | string | yes | Unique face code |\n| state | string | yes | Producer status ( A - active; P - passive) |\n| code | string | yes | Producer's unique code |\n| order_no | number | no | Order number in the list of producers |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Producer's unique code used for verification in the system |\n| message | string | Message specifying the cause of the error from the server |"
			},
			"response": []
		},
		{
			"name": "Producers / Export",
			"id": "8b7b2a89-a511-40cd-8b16-4c71e25fd8f4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/producer$export",
				"description": "Uploading data about manufacturers for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request. To implement bulk input, it is necessary to duplicate the `producer` array in the request with the appropriate parameters as many times as you need.\n\n**Request**\n\n``` json\n{\n  \"code\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"producer\": [\n    {\n      \"person_code\": \"\",\n      \"state\": \"\",\n      \"order_no\": \"\",\n      \"code\": \"\"\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| code | string | no | Unique producer's code assigned by the user in the system (allows you to select/filter the service by the entered code) |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Producer filter by creation date |\n| end_create_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date of producers |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| producer | array | Producer data array |\n| person_code | string | Unique face code |\n| state | string | Producer status ( A - active, P - passive) |\n| order_no | number | Order number in the list of producers |\n| code | string | Producer unique code |"
			},
			"response": []
		},
		{
			"name": "Legal entity / Import",
			"id": "256dfa04-7058-4506-a711-5915cc2956b3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legal_person\": [\r\n    {\r\n      \"name\": \"OOO Green White Solutions\",\r\n      \"code\": \"007\",\r\n      \"short_name\": \"GWS\",\r\n      \"region_code\": \"Tashkent\",\r\n      \"is_budgetarian\": \"Y\",\r\n      \"tin\": \"965234875\",\r\n      \"state\": \"A\",\r\n      \"primary_person_code\": \"\",\r\n      \"parent_person_code\": \"\",\r\n      \"barcode\": \"48465198\",\r\n      \"vat_code\": \"566419465165\",\r\n      \"cea\": \"\",\r\n      \"main_phone\": \"+9987112030301\",\r\n      \"email\": \"info@greenwhite.uz\",\r\n      \"web\": \"\",\r\n      \"address\": \"Tashkent, Beshagach 1\",\r\n      \"address_guide\": \"\",\r\n      \"zip_code\": \"32105\",\r\n      \"latlng\": \"\",\r\n      \"is_client\": \"\",\r\n      \"is_supplier\": \"\",\r\n      \"groups\": [\r\n        {\r\n          \"group_code\": \"\",\r\n          \"type_code\": \"\"\r\n        }\r\n      ],\r\n       \"bank_accounts\": [\r\n {\r\n          \"bank_account_id\": \"\",\r\n          \"bank_account_code\": \"\",\r\n          \"bank_account_name\": \"\",\r\n          \"is_main\": \"\",\r\n          \"currency_code\": \"\",\r\n          \"state\": \"\",\r\n          \"note\": \"\",\r\n          \"mfo\": \"\"\r\n        \r\n }\r\n],\r\n \"rooms\": [\r\n        {\r\n          \"room_code\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/legal_person$import",
				"description": "The service imports data about legal entities, in accordance with the values of the parameters passed to the service in the request. This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"legal_person\": [\n    {\n      \"name\": \"OOO Green White Solutions\",\n      \"code\": \"007\",\n      \"short_name\": \"GWS\",\n      \"region_code\": \"Tashkent\",\n      \"is_budgetarian\": \"Y\",\n      \"tin\": \"965234875\",\n      \"state\": \"A\",\n      \"primary_person_code\": \"\",\n      \"parent_person_code\": \"\",\n      \"barcode\": \"48465198\",\n      \"vat_code\": \"566419465165\",\n      \"cea\": \"\",\n      \"main_phone\": \"+9987112030301\",\n      \"email\": \"info@greenwhite.uz\",\n      \"web\": \"\",\n      \"address\": \"Tashkent, Beshagach 1\",\n      \"address_guide\": \"\",\n      \"zip_code\": \"32105\",\n      \"latlng\": \"\",\n      \"is_client\": \"\",\n      \"is_supplier\": \"\",\n      \"groups\": [\n        {\n          \"group_code\": \"\",\n          \"type_code\": \"\"\n        }\n      ],\n       \"bank_accounts\": [\n {\n          \"bank_account_id\": \"\",\n          \"bank_account_code\": \"\",\n          \"bank_account_name\": \"\",\n          \"is_main\": \"\",\n          \"currency_code\": \"\",\n          \"state\": \"\",\n          \"note\": \"\",\n          \"mfo\": \"\"\n }\n],\n \"rooms\": [\n        {\n          \"room_code\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| legal_person | array | yes | An array containing data about a legal entity |\n| code | string | yes | A unique legal entity code assigned for integration with third-party software |\n| name | string | yes | Full legal name of the legal entity |\n| short_name | string | yes | Short alternative name of the legal entity |\n| region_code | string | no | Unique code of the region in which the legal entity is located |\n| is_budgetarian | string | yes | Whether or not the applicant has a financially responsible person ( Y / N ) |\n| tin | string | yes | TIN of a legal entity (taxpayer identification number) |\n| state | string | yes | Legal entity status in the system (A - active, P - passive) |\n| web | string | no | The website of the legal entity |\n| email | string | no | The email of the legal entity |\n| primary_person_code | string | no | Code of the counterparty-owner assigned to the legal entity. It is used in case of presence of network points. |\n| parent_person_code | string | no | Unique ID of the owner of the legal entity for integration with third-party software. Used when there are network points |\n| barcode | string | no | A barcode is coded information applied to packaging in the form of strokes, read using special devices. With the help of a bar code, information about some of the most significant product parameters is encoded. The most common American Universal Product Code UPC and the European EAN coding system |\n| vat_code | string | no | VAT code |\n| cea | string | no | CEA of a legal entity |\n| main_phone | string | no | The main telephone number of the legal entity, which receives requests of a different nature. |\n| address | string | no | Address where the legal entity is located |\n| address_guide | string | no | Landmark - an easily recognizable object by which you can navigate in the area |\n| zip_code | string | no | The postal code of the legal entity that sends and receives letters and various documents |\n| latlng | string | no | Legal entity coordinates on the map |\n| groups | array | no | Array with data on the characteristic of a legal entity |\n| group_code | string | no | Unique characteristic code of a legal entity |\n| type_code | string | no | Unique subtype code of the legal entity characteristic |\n| is_client | string | no | An option to save legal entity as client (Y - yes, N - no) |\n| is_supplier | string | no | An option to save legal entity as vendor (Y - yes, N - no) |\n| bank_accounts | string | no | Array with current accounts (A/C)  <br> |\n| bank_account_id | string | yes | Current account ID  <br> |\n| bank_account_code | string | yes | Current account code  <br> |\n| bank_account_name | string | yes | Current account name  <br> |\n| is_main | string | yes | An option to determine whether current account is main or not (Y - yes, N - no)  <br> |\n| currency_code | string | yes | Currency code  <br> |\n| state | string | yes | Status of currenct account (A - active, P -passive)  <br> |\n| note | string | no | Note  <br> |\n| mfo | string | yes | Bank identifier code (BIC)  <br> |\n| room_code | string | no | Workspace code |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique code records |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Legal entity / Export",
			"id": "5d38e3ed-2d69-4a63-87ff-c3948ff38b2b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rooms\": [\r\n        {\r\n          \"room_code\": \"\"\r\n        }\r\n      ],\r\n    \"code\": \"\",\r\n    \"state\": \"\",\r\n    \"begin_created_on\": \"\",\r\n    \"end_created_on\": \"\",\r\n    \"begin_modified_on\": \"\",\r\n    \"end_modified_on\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/legal_person$export",
				"description": "Uploading data on legal entities for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n   \"rooms\": [\n        {\n          \"room_code\": \"\"\n        }\n      ],\n    \"code\": \"\",\n    \"state\": \"\",\n    \"begin_created_on\": \"\",\n    \"end_created_on\": \"\",\n    \"begin_modified_on\": \"\",\n    \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"legal_person\": [\n    {\n      \"person_id\": \"\",\n      \"name\": \"\",\n      \"code\": \"\",\n      \"short_name\": \"\",\n      \"region_code\": \"\",\n      \"is_budgetarian\": \"\",\n      \"tin\": \"\",\n      \"state\": \"\",\n      \"primary_person_code\": \"\",\n      \"parent_person_code\": \"\",\n      \"barcode\": \"\",\n      \"vat_code\": \"\",\n      \"cea\": \"\",\n      \"main_phone\": \"+\",\n      \"email\": \"\",\n      \"web\": \"\",\n      \"address\": \"\",\n      \"address_guide\": \"\",\n      \"zip_code\": \"\",\n      \"latlng\": \"\",\n      \"is_client\": \"\",\n      \"is_supplier\": \"\",\n      \"groups\": [\n        {\n          \"group_code\": \"\",\n          \"type_code\": \"\"\n        }\n      ],\n      \"bank_accounts\": [\n {\n          \"bank_account_id\": \"\",\n          \"bank_account_code\": \"\",\n          \"bank_account_name\": \"\",\n          \"is_main\": \"\",\n          \"currency_code\": \"\",\n          \"state\": \"\",\n          \"note\": \"\",\n          \"mfo\": \"\",\n          \"bank_name\": \"\"\n }\n],\n       \"rooms\": [\n        {\n           \"room_id\": \"\",\n           \"room_code\": \"\",\n           \"room_type_code\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| rooms | array | no | Array with workspaces data |\n| room_code | string | no | Workspace code |\n| code | string | no | Unique legal entity code assigned by the user in the system (allows you to select/filter the service by the entered code) |\n| state | string | no | Filter of legal entitties statuses. There can be 4 options  <br>1\\. state = \"A\", filter by all active legal entities  <br>2\\. state = \"P\", filter by all inactive legal entities  <br>3\\. state = \"A,P\", filter all active and inactive legal entities  <br>4\\. state = \"\", filter all active legal entities |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter legal entities by creation date |\n| end_create_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by the last date of creation of legal entities |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| person_id | number | Legal entity's ID |\n| legal_person | array | An array containing data about a legal entity |\n| code | string | A unique legal entity code assigned for integration with third-party software |\n| name | string | Full legal name of the legal entity |\n| short_name | string | Short alternative name of the legal entity |\n| region_code | string | Unique code of the region in which the legal entity is located |\n| is_budgetarian | string | Whether or not the applicant has a financially responsible person ( Y / N ) |\n| tin | string | TIN of a legal entity (taxpayer identification number) |\n| state | string | Legal entity status in the system (A - active, P - passive) |\n| web | string | The website of the legal entity |\n| email | string | The email of the legal entity |\n| primary_person_code | string | Code of the counterparty-owner assigned to the legal entity. It is used in case of presence of network points. |\n| parent_person_code | string | Unique ID of the owner of the legal entity for integration with third-party software. Used when there are network points |\n| barcode | string | A barcode is coded information applied to packaging in the form of strokes, read using special devices. With the help of a bar code, information about some of the most significant product parameters is encoded. The most common American Universal Product Code UPC and the European EAN coding system |\n| vat_code | string | VAT code |\n| cea | string | CEA of a legal entity |\n| main_phone | string | The main telephone number of the legal entity, which receives requests of a different nature. |\n| address | string | Address where the legal entity is located |\n| address_guide | string | Landmark - an easily recognizable object by which you can navigate in the area |\n| zip_code | string | The postal code of the legal entity that sends and receives letters and various documents |\n| latlng | string | Legal entity coordinates on the map |\n| groups | array | Array with data on the characteristic of a legal entity |\n| group_code | string | Unique characteristic code of a legal entity |\n| type_code | string | Unique subtype code of the legal entity characteristic |\n| bank_accounts | array | Array with current accounts (A/C) |\n| bank_account_id | string | Current account ID |\n| bank_account_code | string | Current account code |\n| bank_account_name | string | Current account name |\n| is_main | string | An option to determine whether current account is main or not (Y - yes, N - no) |\n| currency_code | string | Currency code |\n| state | string | Status of currenct account (A - active, P -passive) |\n| note | string | Note |\n| mfo | string | Bank identifier code (BIC) |\n| bank_name | string | Bank name |\n| rooms | array | Array with workspace data |\n| room_id | number | Workspace ID |\n| room_code | string | Workspace code |\n| room_type_code | string | Workspace type code |\n| is_client | string | An option to save legal entity as client (Y - yes, N - no) |\n| is_supplier | string | An option to save legal entity as vendor (Y - yes, N - no) |"
			},
			"response": []
		},
		{
			"name": "Natural persons / Import",
			"id": "1557fb70-bdeb-4b9a-af98-83c5b6a8c484",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"natural_person\": [\r\n    {\r\n      \"first_name\": \"Ivan\",\r\n      \"last_name\": \"Ivanov\",\r\n      \"middle_name\": \"Ivanovich\",\r\n      \"code\": \"1001\",\r\n      \"birthday\": \"12.12.2000\",\r\n      \"gender\": \"M\",\r\n      \"region_code\": \"Tashkent\",\r\n      \"address\": \"Tashkent city, Chilanzar district, 20\",\r\n      \"is_budgetarian\": \"Y\",\r\n      \"state\": \"A\",\r\n      \"legal_person_code\": \"\",\r\n      \"web\": \"\",\r\n      \"telegram\": \"\",\r\n      \"is_client\": \"\",\r\n      \"is_supplier\": \"\",\r\n      \"groups\": [\r\n        {\r\n          \"group_code\": \"\",\r\n          \"type_code\": \"\"\r\n        }\r\n      ],\r\n      \"main_phone\": \"\",\r\n      \"email\": \"\"\r\n\r\n\r\n\r\n\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/natural_person$import",
				"description": "Through this interface, the service uploads data about natural persons to the Smartup X from third party software. The interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"natural_person\": [\n    {\n      \"first_name\": \"Ivan\",\n      \"last_name\": \"Ivanov\",\n      \"middle_name\": \"Ivanovich\",\n      \"code\": \"1001\",\n      \"birthday\": \"12.12.2000\",\n      \"gender\": \"M\",\n      \"region_code\": \"Tashkent\",\n      \"address\": \"Tashkent city, Chilanzar district, 20\",\n      \"is_budgetarian\": \"Y\",\n      \"state\": \"A\",\n      \"legal_person_code\": \"\",\n      \"web\": \"\",\n      \"telegram\": \"\",\n      \"is_client\": \"\",\n      \"is_supplier\": \"\",\n      \"groups\": [\n        {\n          \"group_code\": \"\",\n          \"type_code\": \"\"\n        }\n      ],\n      \"main_phone\": \"\",\n      \"email\": \"\"\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| natural_person | array | yes | Array with data about natural persons |\n| first_name | string | yes | Name of the natural person |\n| last_name | string | no | Surname of natural person |\n| middle_name | string | no | Middle name of an natural person |\n| code | string | yes | Unique code of an natural person |\n| birthday | date(dd.mm.yyyy) | no | Date of birth of the natural person. |\n| gender | string | yes | Gender of an natural person ( M - male , F - fermale ) |\n| region_code | string | no | Unique code of the region of residence of an natural person |\n| is_budgetarian | string | yes | Is the natural person liable (Y/N) |\n| address | string | no | Place of residence of an natural person by registration |\n| state | string | yes | Status of an natural person (A - active, P - passive) |\n| legal_person_code | string | no | A unique legal entity code used for integration with third-party software. Used when there are network points |\n| web | string | no | The website of an natural person, if any, with all the information about him |\n| email | string | no | The email of the legal entity |\n| main_phone | string | no | The main telephone number of an natural person |\n| telegram | string | no | Telegram contact |\n| is_client | string | no | An option to save natural person as client (Y - yes, N - no) |\n| is_supplier | string | no | An option to save natural person as vendor (Y - yes, N - no) |\n| groups | array | no | An array with data on the characteristics of an natural person |\n| group_code | string | no | Unique code of characteristics of an natural person |\n| type_code | string | no | Unique subtype code of the characteristic of an natural person |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Natural persons / Export",
			"id": "81bf2013-74d4-452b-a5a4-a30436e36dca",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"rooms\": [\r\n        {\r\n          \"room_code\": \"\"\r\n        }\r\n      ],\r\n  \"code\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/natural_person$export",
				"description": "The service exports data on natural persons for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"rooms\": [\n        {\n          \"room_code\": \"\"\n        }\n      ],\n  \"code\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"natural_person\": [\n    {\n      \"person_id\":\"\",\n      \"first_name\": \"\",\n      \"last_name\": \"\",\n      \"middle_name\": \"\",\n      \"code\": \"\",\n      \"birthday\": \"\",\n      \"gender\": \"\",\n      \"region_name\": \"\",\n      \"address\": \"\",\n      \"is_budgetarian\": \"\",\n      \"state\": \"\",\n      \"legal_person_code\": \"\",\n      \"web\": \"\",\n      \"telegram\": \"\",\n      \"is_client\": \"\",\n      \"is_supplier\": \"\",\n      \"groups\": [\n        {\n          \"group_code\": \"\",\n          \"type_code\": \"\"\n        }\n      ],\n        \"rooms\": [\n        {\n          \"room_id\": \"\",\n          \"room_code\": \"\",\n          \"room_type_code\": \"\"\n        }\n      ],\n      \"main_phone\": \"\",\n      \"email\": \"\"\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| rooms | array | no | Array with workspace data |\n| room_code | string | no | Workspace code |\n| code | string | no | The unique code of an natural person assigned by the user in the system (allows you to select/filter the service by the entered code) |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter natural persons by date of creation. |\n| end_create_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date of natural persons. |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by dates of changes made. |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date. |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| natural_person | array | Array with data about natural persons |\n| person_id | number | Natural person's ID |\n| first_name | string | Name of the natural person |\n| last_name | string | Surname of natural person |\n| middle_name | string | Middle name of an natural person |\n| code | string | Unique code of an natural person |\n| birthday | date(dd.mm.yyyy) | Date of birth of the natural person. |\n| gender | string | Gender of an natural person ( M - male , F - fermale ) |\n| region_name | string | The name of the region of natural person |\n| is_budgetarian | string | Is the natural person liable (Y/N) |\n| address | string | Place of residence of an natural person by registration |\n| state | string | Status of an natural person (A - active, P - passive) |\n| legal_person_code | string | A unique legal entity code used for integration with third-party software. Used when there are network points |\n| web | string | The website of an natural person, if any, with all the information about him |\n| email | string | The email of the legal entity |\n| main_phone | string | The main telephone number of an natural person |\n| telegram | string | Telegram contact |\n| is_client | string | An option to save natural person as client (Y - yes, N - no) |\n| is_supplier | string | An option to save natural person as vendor (Y - yes, N - no) |\n| groups | array | An array with data on the characteristics of an natural person |\n| group_code | string | Unique code of characteristics of an natural person |\n| type_code | string | Unique subtype code of the characteristic of an natural person |\n| rooms | array | Array with workspace data |\n| room_id | number | Workspace ID |\n| room_code | string | Workspace code |\n| room_type_code | string | Workspace type code |"
			},
			"response": []
		},
		{
			"name": "Persons group / Import",
			"id": "345cd561-3330-43e2-af2d-6478f266276c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"person_group\": [\r\n    {\r\n      \"code\": \"\",\r\n      \"name\": \"\",\r\n      \"person_kind\": \"\",\r\n      \"state\": \"\",\r\n      \"person_group_types\": [\r\n        {\r\n          \"code\": \"\",\r\n          \"name\": \"\",\r\n          \"state\": \"\",\r\n          \"order_no\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/person_group$import",
				"description": "The interface creates the required number of new groups of persons in addition to the default system groups - legal and natural persons, for import.\n\n**Request**\n\n``` json\n{\n  \"person_group\": [\n    {\n      \"code\": \"\",\n      \"name\": \"\",\n      \"person_kind\": \"\",\n      \"state\": \"\",\n      \"person_group_types\": [\n        {\n          \"code\": \"\",\n          \"name\": \"\",\n          \"state\": \"\",\n          \"order_no\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| person_group | array | yes | Array with data about a group of persons |\n| code | string | yes | Unique code of a group of persons, set for integration with third-party software |\n| name | string | yes | Full name of the group of persons |\n| person_kind | string | yes | Type of person ( N - natural person, L - legal entity) |\n| state | string | yes | The status of a group of persons in the system ( A - active, P - passive) |\n| person_group_types | array | no | An array with data on the characteristics of a group of persons |\n| code | string | yes | Unique code of characteristics of a group of persons |\n| name | string | yes | Full name of the person group type |\n| state | string | yes | The status of the type of group of persons in the system ( A - active, P - passive) |\n| order_no | number | no | Order number in the list of person groups |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique code records |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Persons group / Export",
			"id": "7cd1d71c-5647-4654-8f80-1b32326b9946",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mr/person_group$export",
				"description": "The interface creates the required number of new groups of persons in addition to the default system groups - legal and natural persons. Through the interface, the service exports data about a group of persons.\n\n**Request**\n\n``` json\n{\n  \"code\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"person_group\": [\n    {\n      \"code\": \"\",\n      \"name\": \"\",\n      \"person_kind\": \"\",\n      \"state\": \"\",\n      \"person_group_types\": [\n        {\n          \"code\": \"\",\n          \"name\": \"\",\n          \"state\": \"\",\n          \"order_no\":\"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| code | string | no | Unique code of a group of persons assigned by the user in the system (allows you to select/filter the service by the entered code) |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| person_group | array | Array with data about a group of persons |\n| code | string | Unique code of a group of persons, set for integration with third-party software |\n| name | string | Full name of the group of persons |\n| person_kind | string | Type of person ( N - natural person, L - legal entity) |\n| state | string | The status of a group of persons in the system (A - active, P - passive) |\n| person_group_types | array | An array with data on the characteristics of a group of persons |\n| code | string | Unique code of characteristics of a group of persons |\n| name | string | Full name of the person group type |\n| state | string | The status of the type of group of persons in the system ( A - active, P - passive) |\n| order_no | number | Order number in the list of person groups |"
			},
			"response": []
		},
		{
			"name": "Workspaces / Export",
			"id": "c0cd7348-2520-4a7f-9551-931f8aee7959",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mrf/room$export",
				"description": "The service exports data on workspaces for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"code\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"room\": [\n        {\n            \"room_code\": \"\",\n            \"room_id\":\"\",\n            \"filial_code\": \"\",\n            \"room_name\": \"\",\n            \"room_type_code\": \"\",\n            \"state\": \"\",\n            \"order_no\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| code | string | no | A unique code of workspaces assigned by the user in the system (allows you to select/filter the service by the entered code) |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| room | array | Array with job data |\n| room_code | string | Unique workspace code set for integration with third-party software |\n| room_id | number | Workspace ID |\n| filial_code | string | Organization code |\n| room_name | string | Worspace name |\n| room_type_code | string | Workspace type |\n| state | string | Workspace status |\n| order_no | number | Order number in the list of workspaces |"
			},
			"response": []
		},
		{
			"name": "Price type / Import",
			"id": "463783f0-5ecc-401f-9cb8-9bebea7c1b95",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"price_type\": [\r\n    {\r\n      \"name\": \"\",\r\n      \"code\": \"\",\r\n      \"with_card\": \"\",\r\n      \"short_name\": \"\",\r\n      \"price_type_kind\": \"\",\r\n      \"currency_code\": \"\",\r\n      \"state\": \"\"\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxs/mkr/price_type$import",
				"description": "The functionality of loading price types from third-party software is implemented. This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"price_type\": [\n    {\n      \"name\": \"Price for dispatching\",\n      \"code\": \"777\",\n      \"with_card\": \"N\",\n      \"short_name\": \"PfD\",\n      \"price_type_kind\": \"S\",\n      \"currency_code\": \"860\",\n      \"state\": \"A\"\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| price_type | array | yes | Array with data on price types |\n| code | string | yes | Unique price type code. A certain type of price is implied (action, promo, return, etc.) |\n| name | string | yes | Price type name |\n| short_name | string | yes | Alternative price type name |\n| price_type_kind | string | yes | Price type ( S - sale price, P - purchase price) |\n| currency_code | string | yes | Unique currency code for this price type |\n| with_card | string | yes | Accounting identifier of the price type by batches (each batch number has its own price value within one inventory) |\n| state | string | yes | Price type status in the system (A - active, P - passive) |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Price type / Export",
			"id": "e438d5b8-1447-44d2-89cb-5753fb48281e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxs/mkr/price_type$export",
				"description": "The service exports data on price types for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{}\n\n```\n\n**Response**\n\n``` json\n{\n  \"price_type\": [\n    {\n      \"code\": \"\",\n      \"name\": \"\",\n      \"short_name\": \"\",\n      \"with_card\": \"\",\n      \"state\": \"\",\n      \"currency_code\": \"\",\n      \"price_type_kind\": \"\"\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n|  |  |  |  |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| price_type | array | Price type array |\n| code | string | Unique price type code |\n| name | string | Price type name |\n| short_name | string | Alternative price type name |\n| with_card | string | Accounting identifier for the type of prices by batches (each batch number has its own price value within one inventory) |\n| state | string | Price type status in the system (A - active, P - passive) |\n| currency_code | string | Unique currency code |\n| price_type_kind | string | Type of price ( S - sale price, P - purchase price) |"
			},
			"response": []
		},
		{
			"name": "Internal movement / Import",
			"id": "05a9b72a-19fd-405c-b569-d7e98a920037",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"movement\": [\r\n    {\r\n      \"filial_code\": \"100\",\r\n      \"external_id\": \"\",\r\n      \"movement_id\": \"1\",\r\n      \"request_id\":\"\",\r\n      \"movement_number\": \"100\",\r\n      \"from_movement_date\": \"\",\r\n      \"to_movement_date\": \"\",\r\n      \"status\": \"C\",\r\n      \"from_warehouse_code\": \"100\",\r\n      \"to_warehouse_code\": \"101\",\r\n      \"reason_code\": \"\",\r\n      \"note\": \"\",\r\n      \"barcode\": \"\",\r\n      \"movement_items\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"movement_item_id\": \"\",\r\n          \"request_item_id\": \"\",\r\n          \"product_code\": \"100\",\r\n          \"inventory_kind\": \"G\",\r\n          \"card_code\": \"\",\r\n          \"serial_number\": \"\",\r\n          \"expiry_date\": \"\",\r\n          \"on_balance\": \"\",\r\n          \"quantity\": \"1\",\r\n          \"batch_number\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/movement$import",
				"description": "Through this interface, the service uploads data on interorganizational movements to the Smartup system X from third party software. The interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"movement\": [\n    {\n      \"filial_code\": \"100\",\n      \"external_id\": \"\",\n      \"movement_id\": \"1\",\n      \"request_id\":\"\",\n      \"movement_number\": \"100\",\n      \"from_movement_date\": \"\",\n      \"to_movement_date\": \"\",\n      \"status\": \"C\",\n      \"from_warehouse_code\": \"100\",\n      \"to_warehouse_code\": \"101\",\n      \"reason_code\": \"\",\n      \"note\": \"\",\n      \"barcode\": \"\",\n      \"movement_items\": [\n        {\n          \"external_id\": \"\",\n          \"movement_item_id\": \"\",\n          \"request_item_id\": \"\",\n          \"product_code\": \"100\",\n          \"inventory_kind\": \"G\",\n          \"card_code\": \"\",\n          \"serial_number\": \"\",\n          \"expiry_date\": \"\",\n          \"on_balance\": \"\",\n          \"quantity\": \"1\",\n          \"batch_number\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| movement | array | yes | Array with data on the interorganizational movement (information about the move itself) |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Movement ID assigned by third party software |\n| movement_id | number | no | Movement ID assigned by Smartup |\n| request_id | number | no | Request ID for interorganizational movement |\n| movement_number | string | no | Movement number |\n| from_movement_date | date(dd.mm.yyyy hh24:mi:ss) | yes | Shipping date of the inventories |\n| to_movement_date | date(dd.mm.yyyy hh24:mi:ss) | yes | Receiving date of the inventories |\n| request_number | string | no | Move request number |\n| form_warehouse_code | string | yes | Recipient's unique state code |\n| to_warehouse_code | string | yes | The unique code of the consignee's warehouse |\n| reason_code | string | no | The unique code of the sender's warehouse |\n| barcode | string | no | A barcode is coded information applied to packaging in the form of strokes, read using special devices. With the help of a bar code, information about some of the most significant product parameters is encoded. The most common American Universal Product Code UPC and the European EAN coding system |\n| note | string | no | Movement note |\n| status | string | no | Movement status ( D - draft, N - new, S - wait shipping, R - wait receiving, T - on the way, C - completed) |\n| movement_items | array | yes | Array of moved inventory items (information about moveable inventory items) |\n| external_id | string | no | Identifier of the merchandise to be moved, assigned by third-party software |\n| movement_item_id | number | no | Item ID of the item being moved, assigned by the Smartup system |\n| request_item_id | number | no | Item ID in the request |\n| product_code | string | yes | The unique code of the moved goods and materials |\n| inventory_kind | string | yes | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| card_code | string | no | Inventory card number |\n| serial_number | string | no | Serial number of goods and materials |\n| expiry_date | date(dd.mm.yyyy) | no | Expiry date of inventory |\n| on_balance | string | yes | Balance |\n| quantity | number | yes | Quantity of goods and materials in movement |\n| batch_number | number | no | Batch number |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique code records |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Internal movement / Export",
			"id": "30c1b699-8e85-4f60-924d-c2cda2c4c3ff",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"movement_id\": \"\",\r\n  \"begin_from_movement_date\": \"\",\r\n  \"end_from_movement_date\": \"\",\r\n  \"begin_to_movement_date\": \"\",\r\n  \"end_to_movement_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/movement$export",
				"description": "The service exports data on nterorganizational movements for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"movement_id\": \"\",\n  \"begin_from_movement_date\": \"\",\n  \"end_from_movement_date\": \"\",\n  \"begin_to_movement_date\": \"\",\n  \"end_to_movement_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"movement\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"movement_id\": \"\",\n      \"movement_number\": \"\",\n      \"from_movement_date\": \"\",\n      \"to_movement_date\": \"\",\n      \"request_id\": \"\",\n      \"status\": \"\",\n      \"from_warehouse_code\": \"\",\n      \"to_warehouse_code\": \"\",\n      \"reason_code\": \"\",\n      \"note\": \"\",\n      \"barcode\": \"\",\n      \"movement_items\": [\n        {\n          \"external_id\": \"\",\n          \"movement_item_id\": \"\",\n          \"request_item_id\": \"\",\n          \"product_code\": \"\",\n          \"serial_number\": \"\",\n          \"inventory_kind\": \"\",\n          \"on_balance\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"quantity\": \"\",\n          \"batch_number\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| filial_codes | array | Array with data of organizations involved in the movement \\* |\n| filial_code | string | Organization unique code |\n| external_id | string | Movement ID assigned by third party software |\n| movement_id | number | Movement ID assigned by Smartup |\n| begin_from_movement_date | date(dd.mm.yyyy hh24:mi:ss) | Filter by shipping begin date |\n| end_from_movement_date | date(dd.mm.yyyy hh24:mi:ss) | Filter by shipping end date |\n| begin_to_movement_date | date(dd.mm.yyyy hh24:mi:ss) | Filter by receiving begin date |\n| end_to_movement_date | date(dd.mm.yyyy hh24:mi:ss) | Filter by receiving end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | Filter by date of modification |\n| end_modified_on | date dd.mm.yyyy hh24:mi:ss) | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| movement | array | Array with data on the interorganizational movement (information about the move itself) |\n| filial_code | string | Organization unique code |\n| external_id | string | Movement ID assigned by third party software |\n| movement_id | number | Movement ID assigned by Smartup |\n| request_id | number | Request ID |\n| movement_number | string | Movement number |\n| from_movement_date | date(dd.mm.yyyy hh24:mi:ss) | Shipping date of the inventories |\n| to_movement_date | date(dd.mm.yyyy hh24:mi:ss) | Receiving date of the inventories |\n| request_number | string | Move request number |\n| from_warehouse_code | string | Recipient's unique state code |\n| to_warehouse_code | string | The unique code of the consignee's warehouse |\n| reason_code | string | The unique code of the sender's warehouse |\n| barcode | string | A barcode is coded information applied to packaging in the form of strokes, read using special devices. With the help of a bar code, information about some of the most significant product parameters is encoded. The most common American Universal Product Code UPC and the European EAN coding system |\n| note | string | Movement note |\n| status | string | Movement status ( D - draft, N - new, S - wait shipping, R - wait receiving, T - on the way, C - completed) |\n| movement_items | array | Array of moved inventory items (information about moveable inventory items) |\n| external_id | string | Identifier of the merchandise to be moved, assigned by third-party software |\n| movement_item_id | number | Item ID of the item being moved, assigned by the Smartup system |\n| request_item_id | number | Item ID in the request |\n| product_code | string | The unique code of the moved goods and materials |\n| inventory_kind | string | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| card_code | string | Inventory card number |\n| serial_number | string | Serial number of goods and materials |\n| expiry_date | date(dd.mm.yyyy) | Expiry date of inventory |\n| on_balance | string | Balance |\n| quantity | number | Quantity of goods and materials in movement |\n| batch_number | number | Batch number |"
			},
			"response": []
		},
		{
			"name": "Stocktaking / Import",
			"id": "78404add-3053-4810-899a-b2f15ddfe91a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"stocktaking\": [\r\n    {\r\n      \"filial_code\": \"\",\r\n      \"external_id\": \"\",\r\n      \"stocktaking_id\": \"\",\r\n      \"stocktaking_number\": \"001\",\r\n      \"stocktaking_date\": \"01.09.2021\",\r\n      \"status\": \"D\",\r\n      \"warehouse_code\": \"100\",\r\n      \"currency_code\": \"860\",\r\n      \"reason_code\": \"\",\r\n      \"note\": \"Planned stocktaking\",\r\n      \"stocktaking_items\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"stocktaking_item_id\": \"\",\r\n          \"product_code\": \"6201191\",\r\n          \"serial_number\": \"\",\r\n          \"inventory_kind\": \"G\",\r\n          \"card_code\": \"\",\r\n          \"expiry_date\": \"\",\r\n          \"batch_number\": \"\",\r\n          \"quantity\": \"1000\",\r\n          \"income_price\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/stocktaking$import",
				"description": "This interface uploads inventory data to the Smartup X from third party software. The interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"stocktaking\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"stocktaking_id\": \"\",\n      \"stocktaking_number\": \"001\",\n      \"stocktaking_date\": \"01.09.2021\",\n      \"status\": \"D\",\n      \"warehouse_code\": \"100\",\n      \"currency_code\": \"860\",\n      \"reason_code\": \"\",\n      \"note\": \"Planned stocktaking\",\n      \"stocktaking_items\": [\n        {\n          \"external_id\": \"\",\n          \"stocktaking_item_id\": \"\",\n          \"product_code\": \"6201191\",\n          \"serial_number\": \"\",\n          \"inventory_kind\": \"G\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"batch_number\": \"\",\n          \"quantity\": \"1000\",\n          \"income_price\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| stocktaking | array | yes | Array with stocltaking data |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Stocktaking ID assigned by third party software |\n| stocktaking_id | number | no | Stocktaking ID assigned by Smartup |\n| stocktaking_number | string | no | Stocktaking number |\n| stocktaking_date | date(dd.mm.yyyy hh24:mi:ss) | yes | Stocktaking date |\n| status | string | no | The status of the stocktaking (P - posted, D - draft, C -cancelled) If no status was set, it will be saved as Draft (D) |\n| warehouse_code | string | yes | Unique warehouse code |\n| reason_code | string | no | Reason for stocktaking. Select a pre-created |\n| currency_code | string | yes | Currency code |\n| note | string | no | Stocktaking note |\n| barcode | string | no | A barcode is coded information applied to packaging in the form of strokes, read using special devices. With the help of a bar code, information about some of the most significant product parameters is encoded. The most common American Universal Product Code UPC and the European EAN coding system |\n| stocktaking_items | array | yes | An array with data on the article of goods and materials participating in the stocktaking list |\n| external_id | string | no | Invenotory SKU ID assigned by third-party software |\n| stocktaking_item_id | number | no | Inventory SKU ID assigned by Smartup |\n| product_code | string | yes | Unique merchandise code |\n| serial_number | string | no | Serial number |\n| inventory_kind | string | yes | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| quantity | number | yes | Quantity of goods and materials |\n| income_price | number | no | Receipt price of goods and materials (only if the actual balance is less than the quantity in the stocktaking) |\n| card_code | string | no | Serial number |\n| expiry_date | date(dd.mm.yyyy ) | no | Expiry date of inventory |\n| balance_quantity | number | no | Actual quantity of goods and materials in stock |\n| batch_number | number | no | Batch number |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Stocktaking / Export",
			"id": "c876e26a-2765-4338-b759-a382892cad28",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"stocktaking_id\": \"\",\r\n  \"begin_stocktaking_date\": \"\",\r\n  \"end_stocktaking_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/stocktaking$export",
				"description": "The service exports data on inter -organizational movements for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"stocktaking_id\": \"\",\n  \"begin_stocktaking_date\": \"\",\n  \"end_stocktaking_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"stocktaking\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"stocktaking_id\": \"\",\n      \"stocktaking_number\": \"\",\n      \"stocktaking_date\": \"\",\n      \"status\": \"\",\n      \"warehouse_code\": \"\",\n      \"currency_code\": \"\",\n      \"reason_code\": \"\",\n      \"note\": \"\",\n      \"barcode\": \"\",\n      \"income_batch_number\": \"\"\n      \"c_income_amount\": \"\",\n      \"c_income_amount_base\": \"\",\n      \"c_expense_amount\": \"\",\n      \"c_expense_amount_base\": \"\",\n      \"stocktaking_items\": [\n        {\n          \"external_id\": \"\",\n          \"stocktaking_item_id\": \"\",\n          \"product_code\": \"\",\n          \"inventory_kind\": \"\",\n          \"card_code\": \"\",\n          \"serial_number\": \"\",\n          \"expiry_date\": \"\",\n          \"balance_quantity\": \"\",\n          \"quantity\": \"\",\n          \"batch_number\": \"\",\n          \"income_price\": \"\",\n          \"income_amount\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_codes | array | no | Array with data of organizations participating in the stocktaking (!) |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Stocktaking ID assigned by third party software |\n| stocktaking_id | number | no | Stocktaking ID assigned by Smartup |\n| begin_stocktaking_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by stocktaking begin date |\n| end_stocktaking_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by stocktaking end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n|  |  |  |  |\n\n! - the array is used when it is necessary to upload data from two or more organizations. If less than two organizations are involved in the process, the `filial _ code` parameter is used outside the array.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| stocktaking | array | Array with inventory data |\n| filial_code | string | Organization unique code |\n| external_id | string | Stocktaking ID assigned by third party software |\n| stocktaking_id | number | Stocktaking ID |\n| stocktaking_number | string | Stocktaking number |\n| stocktaking_date | date(dd.mm.yyyy hh24:mi:ss) | Stocktaking date |\n| status | string | The status of the stocktaking (P - posted, D - draft, C -cancelled) If no status was set, it will be saved as Draft (D) |\n| warehouse_code | string | Unique warehouse code |\n| income_batch_number | number | The batch number of inventory receipts |\n| currency_code | string | Currency code |\n| reason_code | string | Stocktaking reason code |\n| note | string | Stocktaking note |\n| barcode | string | Barcode |\n| c_income_amount | number | Amount of profit |\n| c_income_amount_base | number | Amount of profit in base currency |\n| c_expense_amount | number | Amount of expenses |\n| c_expense_amount_base | number | Amount of expenses in base currency |\n| stocktaking_items | array | Array with data on the article of goods and materials participating in the stocktaking list |\n| external_id | string | Stocktaking ID assigned by third party software |\n| stocktaking_item_id | number | Stocktaking SKU ID assigned by Smartup |\n| serial_number | string | Serial number of inventory |\n| balance_quantity | number | The quantity of inventories which were before stocktaking. |\n| product_code | string | Unique merchandise code |\n| inventory_kind | string | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| card_code | string | Card number |\n| expiry_date | string | Expiry date of inventory |\n| quantity | date(dd.mm.yyyy) | Quantity of goods and materials |\n| batch_number | number | Batch number of inventories |\n| income_price | number | Receipt price |\n| income_amount | number | Receipt amount |"
			},
			"response": []
		},
		{
			"name": "Write-off / Import",
			"id": "cc7f48fe-ede6-4d3d-9239-7701f5922c7d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"writeoff\": [\r\n    {\r\n      \"filial_code\": \"\",\r\n      \"external_id\": \"\",\r\n      \"writeoff_id\": \"\",\r\n      \"writeoff_number\": \"\",\r\n      \"writeoff_date\": \"\",\r\n      \"status\": \"\",\r\n      \"warehouse_code\": \"\",\r\n      \"reason_code\": \"\",\r\n      \"currency_code\": \"\",\r\n      \"note\": \"\",\r\n      \"writeoff_items\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"writeoff_item_id\": \"\",\r\n          \"product_code\": \"\",\r\n          \"serial_number\": \"\",\r\n          \"inventory_kind\": \"\",\r\n          \"card_code\": \"\",\r\n          \"expiry_date\": \"\",\r\n          \"quantity\": \"\",\r\n          \"batch_number\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/writeoff$import",
				"description": "The functionality of loading write-offs from third-party software. This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"writeoff\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"writeoff_id\": \"\",\n      \"writeoff_number\": \"\",\n      \"writeoff_date\": \"\",\n      \"status\": \"\",\n      \"warehouse_code\": \"\",\n      \"reason_code\": \"\",\n      \"currency_code\": \"\",\n      \"note\": \"\",\n      \"writeoff_items\": [\n        {\n          \"external_id\": \"\",\n          \"writeoff_item_id\": \"\",\n          \"product_code\": \"\",\n          \"serial_number\": \"\",\n          \"inventory_kind\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"quantity\": \"\",\n          \"batch_number\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| write off | array | yes | Array with write-off data |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Write-off ID assigned by third party software |\n| writeoff_id | number | no | ID assigned by Smartup |\n| writeoff_number | string | no | Item write-off number |\n| writeoff_date | date(dd.mm.yyyy hh24:mi:ss) | yes | Date of write-off of goods and materials from the warehouse |\n| warehouse_code | string | yes | The unique code of the warehouse for which the write-off is taking place |\n| currency_code | string | yes | The unique code of the write-off currency |\n| reason_code | string | no | Reason for write-off. Select a pre-created |\n| note | string | no | Write-off note |\n| status | string | no | Write-off status ( D - draft, A - in assembly, P - posted, C - completed) |\n| writeoff_items | array | yes | Array with data on the inventory item to be written off |\n| external_id | string | no | Identifier of the write-off article assigned by third-party software |\n| writeoff_item_id | number | no | ID assigned by Smartup |\n| product_code | string | yes | Unique inventory code assigned for integration with third-party software |\n| serial_number | string | no | Serial number |\n| inventory_kind | string | yes | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| quantity | number | yes | Amount of inventory to be written off |\n| card_code | string | no | Inventory card number |\n| expiry_date | string | no | Expiry date of inventory |\n| batch_number | string | no | Batch number |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Write-off / Export",
			"id": "8e12cd8b-f075-4371-a2b1-df09f37af3b0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"writeoff_id\": \"\",\r\n  \"begin_writeoff_date\": \"\",\r\n  \"end_writeoff_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/writeoff$export",
				"description": "The service exports data on write-offs for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"writeoff_id\": \"\",\n  \"begin_writeoff_date\": \"\",\n  \"end_writeoff_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"writeoff\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"writeoff_id\": \"\",\n      \"writeoff_number\": \"\",\n      \"writeoff_date\": \"\",\n      \"status\": \"\",\n      \"currency_code\": \"\",\n      \"barcode\": \"\",\n      \"warehouse_code\": \"\",\n      \"reason_code\": \"\",\n      \"note\": \"\",\n      \"c_amount\": \"\",\n      \"c_amount_base\": \"\",\n      \"writeoff_items\": [\n        {\n          \"external_id\": \"\",\n          \"writeoff_item_id\": \"\",\n          \"inventory_kind\": \"\",\n          \"product_code\": \"\",\n          \"serial_number\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"quantity\": \"\",\n          \"batch_number\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_codes | array | no | Array with data of organizations participating in the write -off (!) |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Write-off ID assigned by third party software |\n| writeoff_id | number | no | Write-off ID in the Smartup system |\n| begin_writeoff_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by write-off begin date |\n| end_writeoff_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by write-off end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n! - the array is used when it is necessary to upload the data of two or more organizations. If less than two organizations are involved in the process, the `filial _ code` parameter is used outside the array.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| write off | array | Array with write-off data |\n| filial_code | string | Organization unique code |\n| external_id | string | Inventory write-off identifier assigned by third-party software |\n| writeoff_id | number | Inventory write-off ID assigned by Smartup system |\n| writeoff_number | string | Item write-off number |\n| writeoff_date | date(dd.mm.yyyy) | Date of inventory write-off |\n| status | string | Write-off status ( D - draft, A - in assembly, P - posted, C - completed) |\n| currency_code | string | The unique code of the write-off currency |\n| barcode | string | Barcode |\n| reason_code | string | Write-off reason code |\n| note | string | Write-off note |\n| c_amount | number | Write-off amount |\n| c_amount_base | number | Write-off amount in base currency |\n| writeoff_items | array | Array with data on the inventory item to be written off |\n| external_id | string | Identifier of the merchandise item to be written off, assigned by third-party software |\n| writeoff_items_id | string | Identifier of the merchandise to be written off, assigned by the Smasrtup system |\n| inventory_kind | string | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| product_code | string | Inventory code |\n| serial_number | string | Serial number |\n| card_code | string | Card number |\n| expiry_date | date(dd.mm.yyyy) | Expiration date of goods and materials in write-off |\n| quantity | number | Number of goods and materials in write-off |\n| batch_number | number | Batch number |"
			},
			"response": []
		},
		{
			"name": "Return to suppliers / Import",
			"id": "5115d4e3-64f6-4d0c-a8a8-0f10225fa34f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"return\": [\r\n    {\r\n      \"filial_code\": \"\",\r\n      \"external_id\": \"\",\r\n      \"return_id\": \"\",\r\n      \"return_number\": \"1\",\r\n      \"return_time\": \"02.09.21\",\r\n      \"status\": \"D\",\r\n      \"warehouse_code\": \"100\",\r\n      \"reason_code\": \"\",\r\n      \"currency_code\": \"860\",\r\n      \"supplier_code\": \"3223\",\r\n      \"owner_person_code\": \"\",\r\n      \"contract_code\": \"\",\r\n      \"purchase_id\": \"\",\r\n      \"invoice_number\": \"\",\r\n      \"invoice_date\": \"\",\r\n      \"note\": \"\",\r\n      \"return_items\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"return_item_id\": \"\",\r\n          \"purchase_item_id\": \"\",\r\n          \"input_id\": \"\",\r\n          \"input_item_id\": \"\",\r\n          \"serial_number\": \"\",\r\n          \"inventory_kind\": \"G\",\r\n          \"on_balance\": \"\",\r\n          \"product_code\": \"\",\r\n          \"card_code\": \"\",\r\n          \"expiry_date\": \"\",\r\n          \"quantity\": \"10\",\r\n          \"price\": \"\",\r\n          \"margin_kind\": \"\",\r\n          \"margin_value\": \"\",\r\n          \"vat_percent\": \"\",\r\n          \"vat_amount\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/return$import",
				"description": "This interface uploads supplier returns data to the Smartup X from third party software. The interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"return\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"return_id\": \"\",\n      \"return_number\": \"1\",\n      \"return_time\": \"02.09.21\",\n      \"status\": \"D\",\n      \"warehouse_code\": \"100\",\n      \"reason_code\": \"\",\n      \"currency_code\": \"860\",\n      \"supplier_code\": \"3223\",\n      \"owner_person_code\": \"\",\n      \"contract_code\": \"\",\n      \"purchase_id\": \"\",\n      \"invoice_number\": \"\",\n      \"invoice_date\": \"\",\n      \"note\": \"\",\n      \"return_items\": [\n        {\n          \"external_id\": \"\",\n          \"return_item_id\": \"\",\n          \"purchase_item_id\": \"\",\n          \"input_id\": \"\",\n          \"input_item_id\": \"\",\n          \"serial_number\": \"\",\n          \"inventory_kind\": \"G\",\n          \"on_balance\": \"\",\n          \"product_code\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"quantity\": \"10\",\n          \"price\": \"\",\n          \"margin_kind\": \"\",\n          \"margin_value\": \"\",\n          \"vat_percent\": \"\",\n          \"vat_amount\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| return | array | yes | Array with data on returns to the supplier |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Return ID assigned by third party software |\n| return_id | number | no | Return ID in Smartup system |\n| return_number | string | no | Return to supplier number |\n| return_time | date(dd.mm.yyyy hh24:mi:ss) | yes | Date of return of goods and materials from the warehouse |\n| warehouse_code | string | yes | The unique code of the warehouse to which the return is made, set for integration with third-party software |\n| currency_code | string | yes | Unique return currency code set for integration with third-party software |\n| supplier_code | string | yes | Vendor return code set for integration with third-party software |\n| reason_code | string | no | Reason for return. Selected from a pre-created list |\n| note | string | no | Return Note |\n| owner_person_code | string | no | Owner ID |\n| contract_code | string | no | Contract ID in the system |\n| purchase_id | string | no | Purchase ID |\n| status | string | no | Return to supplier status ( D - draft, N - new, C - completed) |\n| invoice_number | string | no | Invoice number |\n| invoice_date | date(dd.mm.yyyy ) | no | Invoice date |\n| return_items | array | yes | Array with data on the article of goods and materials returned to the supplier |\n| external_id | string | no | Return SKU ID assigned by third party software |\n| return_item_id | number | no | Return SKU ID |\n| product_code | string | yes | A unique inventory code that is set for integration with third-party software. |\n| inventory_kind | string | yes | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| quantity | number | yes | Quantity of goods and materials to be returned |\n| price | number | yes | Inventory price for return |\n| card_code | string | no | Serial number of goods and materials |\n| expiry_date | date(dd.mm.yyyy) | no | Expiry date of inventory |\n| purchase_item_id | string | no | Purchasing item ID |\n| input_id | string | no | Identifier of the arrival of goods and materials to the warehouse |\n| input_item_id | string | no | Item ID in the warehouse receipt |\n| serial_number | string | no | Serial number |\n| on_balance | string | yes | The status of the balance of an person (Y - yes, N - no) |\n| product_code | string | yes | Unique inventory code assigned for integration with third-party software |\n| margin_kind | string | no | Type of discount/markup for each merchandise. It can be both in percentage and in the sum value ( P - percentage, A - amount) |\n| margin_value | number | no | The value of the discount / markup for each item and material |\n| vat_percent | number | no | VAT (%) |\n| vat_amount | number | no | VAT amount |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Return to suppliers / Export",
			"id": "92df3968-2593-45a9-8bf8-3e52a1671dd2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"return_id\": \"\",\r\n  \"begin_return_date\": \"\",\r\n  \"end_return_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/return$export",
				"description": "The service exports data on returns to suppliers for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"return_id\": \"\",\n  \"begin_return_date\": \"\",\n  \"end_return_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\nResponse\n\n``` json\n{\n  \"return\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"return_id\": \"\",\n      \"return_number\": \"\",\n      \"return_time\": \"\",\n      \"status\": \"\",\n      \"warehouse_code\": \"\",\n      \"reason_code\": \"\",\n      \"purchase_id\": \"\",\n      \"currency_code\": \"\",\n      \"contract_code\": \"\",\n      \"supplier_code\": \"\",\n      \"owner_person_code\": \"\",\n      \"invoice_number\": \"\",\n      \"invoice_date\": \"\",\n      \"note\": \"\",\n      \"return_items\": [\n        {\n          \"external_id\": \"\",\n          \"return_item_id\": \"\",\n          \"purchase_item_id\": \"\",\n          \"input_id\": \"\",\n          \"input_item_id\": \"\",\n          \"serial_number\": \"\",\n          \"product_code\": \"\",\n          \"inventory_kind\": \"\",\n          \"on_balance\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"quantity\": \"\",\n          \"price\": \"\",\n          \"margin_kind\": \"\",\n          \"margin_value\": \"\",\n          \"vat_percent\": \"\",\n          \"vat_amount\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_codes | array | no | Array with data of organizations involved in the return process (!) |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Return to Supplier ID assigned by third party software |\n| return_id | number | no | Return to Supplier ID in Smartup |\n| begin_return_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by return begin date |\n| end_return_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by return end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n! - the array is used when it is necessary to upload the data of two or more organizations. If less than two organizations are involved in the process, the `filial _ code` parameter is used outside the array.\n\n**Description of response parameters**  \n| Parameter | Data type | Required | Description |  \n| --- | --- | --- | --- |  \n| return | array | yes | Array with data on returns to the supplier |  \n| filial_code | string | optional | Organization unique code |  \n| external_id | string | optional | Return ID assigned by third party software |  \n| return_id | number | optional | Return ID in Smartup system |  \n| return_number | string | yes | Return to supplier number |  \n| return_time | date(dd.mm.yyyy hh24:mi:ss) | yes | Date of return of goods and materials from the warehouse |  \n| warehouse_code | string | yes | The unique code of the warehouse to which the return is made, set for integration with third-party software |  \n| currency_code | string | yes | Unique return currency code set for integration with third-party software |  \n| supplier_code | string | yes | Vendor return code set for integration with third-party software |  \n| reason_code | string | no | Reason for return. Selected from a pre-created list |  \n| note | string | no | Return Note |  \n| owner_person_code | string | no | Owner ID |  \n| contract_code | string | no | Contract ID in the system |  \n| purchase_id | string | no | Purchase ID |  \n| status | string | no | Return to supplier status ( D - draft, N - new, C - completed) |  \n| invoice_number | string | no | Invoice number |  \n| invoice_date | date(dd.mm.yyyy ) | no | Invoice date |  \n| return_items | array | yes | Array with data on the article of goods and materials returned to the supplier |  \n| external_id | string | optional | Return SKU ID assigned by third party software |  \n| return_item_id | string | yes | Return SKU ID |  \n| product_code | string | yes | A unique inventory code that is set for integration with third-party software. |  \n| inventory_kind | string | yes | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |  \n| quantity | number | yes | Quantity of goods and materials to be returned |  \n| price | number | yes | Inventory price for return |  \n| card_code | string | no | Serial number of goods and materials |  \n| expiry_date | string | no | Expiry date of inventory |  \n| purchase_item_id | string | no | Purchasing item ID |  \n| input_id | string | no | Identifier of the arrival of goods and materials to the warehouse |  \n| input_item_id | string | no | Item ID in the warehouse receipt |  \n| on_balance | string | no |The balance of a person (Y - yes, N - no)|  \n| serial_number | date(dd.mm.yyyy) | no | Serial number |  \n| margin_kind | string | no | Type of discount/markup for each merchandise. It can be both in percentage and in the sum value ( P - percentage, A - amount) |  \n| margin_value | number | no | The value of the discount / markup for each item and material |  \n| vat_percent | number | no | VAT (%) |  \n| vat_amount | number | no | VAT amount |"
			},
			"response": []
		},
		{
			"name": "Receipts to warehouse / Import",
			"id": "d1faecb6-b44b-4350-ba4f-a1fae7e5a673",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"input\": [\r\n    {\r\n      \"filial_code\": \"\",\r\n      \"external_id\": \"\",\r\n      \"input_id\": \"1\",\r\n      \"input_number\": \"\",\r\n      \"input_time\": \"02.09.2021\",\r\n      \"status\": \"D\",\r\n      \"warehouse_code\": \"100\",\r\n      \"note\": \"Income to warehouse\",\r\n      \"input_items\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"input_item_id\": \"1\",\r\n          \"purchase_id\": \"545\",\r\n          \"purchase_item_id\": \"1\",\r\n          \"quantity\": \"1000\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/input$import",
				"description": "The interface allows you to upload data on receipts to the warehouse from third-party software to the Smartup X . This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"input\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"input_id\": \"1\",\n      \"input_number\": \"\",\n      \"input_time\": \"02.09.2021\",\n      \"status\": \"D\",\n      \"warehouse_code\": \"100\",\n      \"note\": \"Income to warehouse\",\n      \"input_items\": [\n        {\n          \"external_id\": \"\",\n          \"input_item_id\": \"1\",\n          \"purchase_id\": \"545\",\n          \"purchase_item_id\": \"1\",\n          \"quantity\": \"1000\",\n          \"marking_codes\": [\n            {\n              \"marking_code\": \"\"\n            },\n            {\n              \"marking_code\": \"\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| input | array | yes | Array with receipts data |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Identifier of the receipts of inventory items to the warehouse, assigned by third-party software |\n| input_id | number | no | Identifier of the receipts of inventory items to the warehouse assigned by Smartup |\n| input_number | string | no | Invoice number |\n| input_time | date(dd.mm.yyyy hh24:mi:ss) | yes | Date and time of receipts |\n| warehouse_code | string | yes | Unique warehouse code |\n| note | string | no | Note on the receipts of goods and materials at the warehouse |\n| status | string | no | The status of the receipt( D - draft, N - new, C - completed) |\n| input_items | array | yes | Array with data on the article of goods and materials in the receipts |\n| external_id | string | no | Inventory item ID in the receipt, assigned by third-party software |\n| input_item_id | number | no | Inventory item ID in the receipts, assigned by the Smartup system |\n| purchase_id | number | yes | Owner ID |\n| purchase_item_id | number | yes | Identifier of the article of goods and materials in the purchase |\n| quantity | number | yes | Number of goods and materials in the receipts |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n    \n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique code records |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Receipts to warehouse / Export",
			"id": "2f49222d-b0bd-4a53-a273-3508b60a8d01",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"input_id\": \"\",\r\n   \"begin_input_date\": \"\",\r\n  \"end_input_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/input$export",
				"description": "The service exports data on receipts to the warehouse for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"input_id\": \"\",\n  \"begin_input_date\": \"\",\n  \"end_input_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"input\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"input_id\": \"\",\n      \"input_number\": \"\",\n      \"input_time\": \"\",\n      \"status\": \"\",\n      \"warehouse_code\": \"\",\n      \"note\": \"\",\n      \"input_items\": [\n        {\n          \"external_id\": \"\",\n          \"input_item_id\": \"\",\n          \"purchase_id\": \"\",\n          \"purchase_item_id\": \"\",\n          \"product_code\": \"\",\n          \"inventory_kind\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"quantity\": \"\",\n          \"price\": \"\",\n          \"margin_kind\": \"\",\n          \"margin_value\": \"\",\n          \"vat_percent\": \"\",\n          \"vat_amount\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_codes | array | no | Array with data of organizations participating in the posting of goods and materials (!) |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Identifier of the receipts of inventory items to the warehouse, assigned by third-party software |\n| input_id | number | no | ID in the Smartup system |\n| begin_input_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by receipts begin date |\n| end_input_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by receipts end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n! - the array is used when it is necessary to upload the data of two or more organizations. If less than two organizations are involved in the process, the `filial _ code` parameter is used outside the array.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| input | array | Array with data on receipts at the warehouse |\n| filial_code | string | Organization unique code |\n| external_id | string | Return SKU ID assigned by third party software |\n| input_id | string | Identifier of the receipts of goods and materials to the warehouse |\n| input_number | string | Invoice number |\n| input_time | date(dd.mm.yyyy hh24:mi:ss) | Date and time of receipts |\n| status | string | The status of the receipt( D - draft, N - new, C - completed) |\n| warehouse_code | string | Inventory receipt warehouse |\n| note | string | Note on receipts |\n| input_items | array | Array with data on the item of goods and materials in the parish |\n| external_id | string | Identifier of the receipts of inventory items to the warehouse, assigned by third-party software |\n| input_item_id | number | Inventory item ID in the receipts, assigned by the Smartup system |\n| purchase_id | number | Owner ID |\n| purchase_item_id | number | Identifier of the article of goods and materials in the purchase |\n| product_code | string | The unique code of the goods and materials |\n| inventory_kind | string | Type of goods and materials (P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| card_code | string | Inventory card number |\n| expiry_date | date(dd.mm.yyyy) | Expiry date of inventory |\n| quantity | number | Quantity of goods and materials |\n| price | number | Inventory price |\n| margin_kind | string | Type of discount/markup for each merchandise. It can be both in percentage and in the sum value ( P - percentage, A - amount) |\n| margin_value | number | The value of the discount / markup for each item and material |\n| vat_percent | number | VAT (%) |\n| vat_amount | number | VAT amount |"
			},
			"response": []
		},
		{
			"name": "Order / Import",
			"id": "5959c5ee-3e7d-4362-bdf0-52658beb9207",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"order\": [\r\n    {\r\n      \"filial_code\": \"\",\r\n      \"external_id\": \"\",\r\n      \"deal_id\": \"1\",\r\n      \"subfilial_code\": \"\",\r\n      \"delivery_number\": \"1\",\r\n      \"delivery_date\": \"03.09.21\",\r\n      \"room_code\": \"100\",\r\n      \"robot_code\": \"100\",\r\n      \"deal_time\": \"02.09.21\",\r\n      \"status\": \"A\",\r\n      \"sales_manager_code\": \"100\",\r\n      \"person_code\": \"100\",\r\n      \"currency_code\": \"860\",\r\n      \"owner_person_code\": \"\",\r\n      \"manager_code\": \"\",\r\n      \"van_code\": \"\",\r\n      \"contract_code\": \"\",\r\n      \"note\": \"\",\r\n      \"invoice_number\": \"100\",\r\n      \"expeditor_code\": \"\",\r\n      \"payment_type_code\": \"\",\r\n      \"order_products\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"product_unit_id\": \"\",\r\n          \"inventory_kind\": \"G\",\r\n          \"warehouse_code\": \"100\",\r\n          \"product_code\": \"100\",\r\n          \"serial_number\": \"\",\r\n          \"card_code\": \"\",\r\n          \"expiry_date\": \"\",\r\n          \"on_balance\": \"\",\r\n          \"order_quant\": \"10\",\r\n          \"price_type_code\": \"777\",\r\n          \"product_price\": \"\",\r\n          \"margin_kind\": \"S\",\r\n          \"margin_value\": \"\",\r\n          \"margin_amount\": \"100\",\r\n          \"vat_percent\": \"\"\r\n        }\r\n      ],\r\n      \"order_gifts\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"product_unit_id\": \"\",\r\n          \"inventory_kind\": \"\",\r\n          \"warehouse_code\": \"\",\r\n          \"product_code\": \"\",\r\n          \"serial_number\": \"\",\r\n          \"card_code\": \"\",\r\n          \"expiry_date\": \"\",\r\n          \"on_balance\": \"\",\r\n          \"order_quant\": \"\"\r\n        }\r\n      ],\r\n      \"order_actions\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"product_unit_id\": \"\",\r\n          \"inventory_kind\": \"\",\r\n          \"warehouse_code\": \"\",\r\n          \"product_code\": \"\",\r\n          \"serial_number\": \"\",\r\n          \"card_code\": \"\",\r\n          \"expiry_date\": \"\",\r\n          \"on_balance\": \"\",\r\n          \"order_quant\": \"\",\r\n          \"bonus_id\": \"\"\r\n        }\r\n      ],\r\n      \"order_consignments\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"consignment_unit_id\": \"\",\r\n          \"consignment_date\": \"\",\r\n          \"consignment_amount\": \"\"   \r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/trade/txs/tdeal/order$import",
				"description": "Through this interface, the service uploads order data to the Smartup X from third party software. The interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"order\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"deal_id\": \"1\",\n      \"subfilial_code\": \"\",\n      \"delivery_number\": \"1\",\n      \"delivery_date\": \"03.09.21\",\n      \"room_code\": \"100\",\n      \"robot_code\": \"100\",\n      \"deal_time\": \"02.09.21\",\n      \"status\": \"A\",\n      \"sales_manager_code\": \"100\",\n      \"person_code\": \"100\",\n      \"currency_code\": \"860\",\n      \"owner_person_code\": \"\",\n      \"manager_code\": \"\",\n      \"van_code\": \"\",\n      \"contract_code\": \"\",\n      \"note\": \"\",\n      \"invoice_number\": \"100\",\n      \"expeditor_code\": \"\",\n      \"payment_type_code\": \"\",\n      \"order_products\": [\n        {\n          \"external_id\": \"\",\n          \"product_unit_id\": \"\",\n          \"inventory_kind\": \"G\",\n          \"warehouse_code\": \"100\",\n          \"product_code\": \"100\",\n          \"serial_number\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"on_balance\": \"\",\n          \"order_quant\": \"10\",\n          \"price_type_code\": \"777\",\n          \"product_price\": \"\",\n          \"margin_kind\": \"S\",\n          \"margin_value\": \"\",\n          \"margin_amount\": \"100\",\n          \"vat_percent\": \"\"\n        }\n      ],\n      \"order_gifts\": [\n        {\n          \"external_id\": \"\",\n          \"product_unit_id\": \"\",\n          \"inventory_kind\": \"\",\n          \"warehouse_code\": \"\",\n          \"product_code\": \"\",\n          \"serial_number\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"on_balance\": \"\",\n          \"order_quant\": \"\"\n        }\n      ],\n      \"order_actions\": [\n        {\n          \"external_id\": \"\",\n          \"product_unit_id\": \"\",\n          \"inventory_kind\": \"\",\n          \"warehouse_code\": \"\",\n          \"product_code\": \"\",\n          \"serial_number\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"on_balance\": \"\",\n          \"order_quant\": \"\",\n          \"bonus_id\": \"\"\n        }\n      ],\n      \"order_consignments\": [\n        {\n          \"external_id\": \"\",\n          \"consignment_unit_id\": \"\",\n          \"consignment_date\": \"\",\n          \"consignment_amount\": \"\"   \n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| order | array | yes | Array with order data |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Order ID assigned by third party software |\n| deal_id | number | no | The order ID is automatically assigned by the system |\n| delivery_number | string | no | Invoice number |\n| deal_time | date(dd.mm.yyyy hh24:mi:ss) | yes | Order Acceptance Date |\n| delivery_date | date(dd.mm.yyyy) | yes | Order delivery date |\n| status | string | yes | Order status ( D - Draft, B#N - New, B#E - In progress, B#W - Waiting to ship, B#S - Shipped , B#V -Delivered, A - Archived, C - Cancelled) |\n| subfilial_code | string | no | Project code |\n| room_code | string | yes | The unique code of the work area where the order was accepted |\n| robot_code | string | yes | Workspace unique staff unit code |\n| expeditor_code | string | no | Expeditor code |\n| payment_type_code | string | no | Payment type code |\n| self_shipment | string | yes | The status that determines weither the order is self shipped or not. (Y - yes, N - no)  <br> |\n| sales_manager_code | string | yes | Unique sales representative code |\n| person_code | string | yes | Unique client code |\n| currency_code | string | yes | Unique currency code |\n| contract_code | string | no | Unique contract code |\n| owner_person_code | string | yes | Owner ID |\n| manager_code | string | no | Unique manager code |\n| van_code | string | no | State vehicle number |\n| invoice_number | string | no | Invoice number |\n| note | string | no | Order note |\n| order_products | array | yes | Array with data about the article of goods and materials in the order |\n| external_id | string | no | Inventory unit identifier assigned by third-party software |\n| product_unit_id | number | no | Unit identifier in the Smartup system |\n| product_code | string | yes | Unique merchandise code |\n| card_code | string | no | Card number |\n| expiry_date | date(dd.mm.yyyy) | no | Expiration date of goods and materials in the order |\n| order_quant | number | yes | Quantity of goods and materials in the order |\n| product_price | number | yes | Inventory price |\n| margin_amount | number | no | The amount of discount / markup for each item and material |\n| margin_kind | string | no | Type of discount/markup for each merchandise. It can be both in percentage and in sum value (P - percentage, A - amount) |\n| margin_value | number | no | The value of the discount / markup for each item and material |\n| vat_percent | number | no | VAT (%) |\n| vat_amount | number | no | VAT amount |\n| inventory_kind | string | yes | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| price_type_code | string | yes | Price type code in the order |\n| warehouse_code | string | no | Shipment warehouse code |\n| order_gifts | array | yes | Array with data about the action in the order |\n| external_id | string | no | Order promo ID assigned by third party software |\n| product_unit_id | number | no | Item ID |\n| inventory_kind | string | yes | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| warehouse_code | string | no | Quantity of goods and materials participating in the action |\n| product_code | string | yes | Code of goods and materials participating in the action |\n| serial_number | string | no | Serial number of goods and materials |\n| card_code | string | no | Inventory card number |\n| expiry_date | date(dd.mm.yyyy) | no | Expiry date of goods and materials participating in the action |\n| on_balance | string | yes | Inventory and balance sheet |\n| order_quant | number | yes | Quantity of promotional(means action) goods and materials in the order |\n| order_actions | array | yes | Array with data about the action in the order |\n| bonus_id | number | yes | Bonus ID |\n| order_consignments | array | yes | Array with data about the consignment in the order. If consignment array was filled current field is a required one.  <br> |\n| external_id | string | no | Order consignment assigned by third party software |\n| consignment_unit_id | number | no | Unique consignment id |\n| consignment_date | date | no | Consignment date  <br> |\n| consignment_amount | number | no | Consignment amount |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Order / Export",
			"id": "da6c0247-7a4f-4c3d-a243-5c6d407568bb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"deal_id\": \"\",\r\n  \"begin_deal_date\": \"\",\r\n  \"end_deal_date\": \"\",\r\n  \"delivery_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/trade/txs/tdeal/order$export",
				"description": "Uploading data about orders for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"deal_id\": \"\",\n  \"begin_deal_date\": \"\",\n  \"end_deal_date\": \"\",\n  \"delivery_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n   {\n    \"order\": [\n      {\n        \"filial_code\": \"\",\n        \"external_id\": \"\",\n        \"deal_id\": \"\",\n        \"subfilial_code\": \"\",\n        \"deal_time\": \"\",\n        \"delivery_number\": \"\",        \n        \"delivery_date\": \"\",\n        \"booked_date\": \"\",\n        \"total_amount\": \"\",\n        \"room_id\": \"\",\n        \"room_code\": \"\",        \n        \"room_name\": \"\",\n        \"robot_code\": \"\",\n        \"lap_code\": \"\",\n        \"sales_manager_id\": \"\",\n        \"sales_manager_code\": \"\",\n        \"sales_manager_name\": \"\",\n        \"expeditor_id\": \"\",\n        \"expeditor_code\": \"\",\n        \"expeditor_name\": \"\",\n        \"person_id\": \"\",\n        \"person_code\": \"\",\n        \"person_name\": \"\",\n        \"person_local_code\": \"\",\n        \"person_latitude\": \"\",\n        \"person_longitude\": \"\",\n        \"person_tin\": \"\",\n        \"currency_code\": \"\",\n        \"owner_person_code\": \"\",\n        \"manager_code\": \"\",\n        \"van_code\": \"\",\n        \"contract_code\": \"\",\n        \"contract_number\": \"\",\n        \"invoice_number\": \"\",\n        \"payment_type_code\": \"\",\n        \"visit_payment_type_code\": \"\",\n        \"note\": \"\",\n        \"status\": \"\",\n        \"with_marking\": \"\",\n        \"self_shipment\": \"\",\n        \"total_weight_netto\": \"\",\n        \"total_weight_brutto\": \"\",\n        \"total_litre\": \"\",\n        \"order_products\": [\n          {\n            \"external_id\": \"\",\n            \"product_unit_id\": \"\",\n            \"product_code\": \"\",\n            \"product_local_code\": \"\",\n            \"product_name\": \"\",\n            \"serial_number\": \"\",\n            \"expiry_date\": \"\",\n            \"order_quant\": \"\",\n            \"sold_quant\": \"\",\n            \"return_quant\": \"\",\n            \"inventory_kind\": \"\",\n            \"on_balance\": \"\",\n            \"card_code\": \"\",\n            \"warehouse_code\": \"\",\n            \"product_price\": \"\",\n            \"margin_amount\": \"\",\n            \"margin_value\": \"\",\n            \"margin_kind\": \"\",\n            \"vat_amount\": \"\",\n            \"vat_percent\": \"\",\n            \"sold_amount\": \"\",\n            \"price_type_code\": \"\"\n          }\n        ],\n        \"order_gifts\": [\n          {\n            \"external_id\": \"\",\n            \"product_unit_id\": \"\",\n            \"product_code\": \"\",\n            \"product_local_code\": \"\",\n            \"product_name\": \"\",\n            \"serial_number\": \"\",\n            \"expiry_date\": \"\",\n            \"order_quant\": \"\",\n            \"sold_quant\": \"\",\n            \"return_quant\": \"\",\n            \"inventory_kind\": \"\",\n            \"on_balance\": \"\",\n            \"card_code\": \"\",\n            \"warehouse_code\": \"\"\n          }\n        ],\n        \"order_actions\": [\n          {\n            \"external_id\": \"\",\n            \"product_unit_id\": \"\",\n            \"product_code\": \"\",\n            \"product_local_code\": \"\",\n            \"product_name\": \"\",\n            \"serial_number\": \"\",\n            \"expiry_date\": \"\",\n            \"order_quant\": \"\",\n            \"sold_quant\": \"\",\n            \"return_quant\": \"\",\n            \"inventory_kind\": \"\",\n            \"on_balance\": \"\",\n            \"card_code\": \"\",\n            \"warehouse_code\": \"\",\n            \"bonus_id\": \"\",\n            \"action_name\": \"\"\n          }\n        ],\n        \"order_consignments\": [\n          {\n            \"external_id\": \"\",\n            \"consignment_unit_id\": \"\",\n            \"consignment_date\": \"\",\n            \"consignment_amount\": \"\"\n          }\n        ]\n      }\n    ]\n  }\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_codes | array | no | Array with data of organizations participating in the order (!) |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Items order ID assigned by third-party software |\n| deal_id | number | no | Order ID in the Smartup system |\n| begin_deal_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by order begin date |\n| end_deal_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by order end date |\n| delivery_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by delivery date of order |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on ** | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification. |\n| end_modified_on ** | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date. |\n\n** Explanation of filters\n\n- Case 1. (If end_modified_on is not set), then begin_modified_on is calculated like (current date - 30 days)\n- Case 2. (If end_modified_on is set), then begin_modified_ on is calculated like (end_modified_on - 30 days)  \n    Which all means that data can be collected in 30 days\n- Case 3. (If no filters set), then end_modified_on = current date, and begin_modified_on = current date - 30 days.\n    \n\n! - the array is used when it is necessary to upload the data of two or more organizations. If less than two organizations are involved in the process, the `filial _ code` parameter is used outside the array.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| order | array | Array with order data |\n| filial_code | string | Organization unique code |\n| external_id | string | Items order ID assigned by third-party software |\n| deal_id | number | Order ID in the Smartup system |\n| delivery_date | date(dd.mm.yyyy) | Order delivery date |\n| booked_date | date(dd.mm.yyyy) | Booking date |\n| total_amount | number | Amount TOTAL |\n| room_name | string | Workspace |\n| deal_time | date(dd.mm.yyyy hh24:mi:ss) | Date and time of order |\n| status | string | Order status ( D - Draft, B#N - New, B#E - In progress, B#W - Waiting to ship, B#S - Shipped , B#V -Delivered, A - Archived, C - Cancelled) |\n| currency_code | string | Unique currency code |\n| delivery_number | string | Invoice number |\n| manager_code | string | Unique manager code |\n| currency_code | string | Currency code |\n| order_products | array | Array with data about the article of goods and materials in the order |\n| external_id | string | Inventory unit identifier in the order assigned by third-party software |\n| product_unit_id | string | Item ID |\n| product_code | string | Unique code of goods and materials in the order |\n| product_name | string | Name of goods and materials in the order |\n| order_quant | number | Quantity of goods and materials in the order |\n| product_price | number | Inventory price in the order |\n| margin_amount | number | Amount of discount/markup |\n| margin_kind | string | Type of discount/markup for each merchandise. It can be both in percentage and in the sum value (P - percentage, A - amount) |\n| margin_value | number | The value of the discount / markup for each item and material |\n| vat_percent | number | VAT (%) |\n| vat_amount | number | VAT amount |\n| sold_amount | number | Quantity of goods and materials sold in the order |\n| inventory_kind | string | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| price_type_code | string | Unique price type code in the order for integration with third-party software |\n| order_gifts | array | Array with data about the action in the order |\n| external_id | string | Order promo ID assigned by third party software |\n| product_unit_id | number | Item ID |\n| product_name | string | Name of goods and materials participating in the action |\n| order_actions | array | Array with data about the action in the order |\n| subfilial_code | string | Project code |\n| delivery_number | string | Waybill No. |\n| room_id | number | Workspace ID |\n| room_code | string | Wokspace Code |\n| robot_code | string | Staff Unit Code |\n| lap_code | number | Haul Code |\n| sales_manager_id | number | Sales Representative ID |\n| sales_manager_code | string | Sales Representative Code |\n| sales_manager_name | string | Sales Representative Name |\n| expeditor_id | number | Expeditor ID |\n| expeditor_code | string | Expeditor Code |\n| expeditor_name | string | Expeditor Name |\n| person_id | number | Person ID |\n| person_code | string | Person Code |\n| person_name | string | Person Name |\n| person_local_code | string | Person Local Code |\n| person_latitude | string | Legal Person Latitude |\n| person_longitude | string | Legal Person Longitude |\n| person_tin | string | Person TIN |\n| owner_person_code | string | Owner ID |\n| van_code | string | Vehicle Code |\n| contract_code | string | Contract Code |\n| contract_number | string | Contract Number |\n| invoice_number | string | Invoice Number of ordered inventories |\n| payment_type_code | string | Payment Type Code |\n| visit_payment_type_code | string | Payment Type Code that is used in visit |\n| note | string | Note |\n| with_marking | string | The status that determines weither the order with marking goods or not. (Y - yes, N - no) |\n| self_shipment | string | The status that determines weither the order is self shipped or not. (Y - yes, N - no) |\n| total_weight_netto | number | Total Netto Weight |\n| total_weight_brutto | number | Total Brutto Weight |\n| total_litre | number | Total Litre |\n| product_local_code | string | Product local code |\n| serial_number | string | Product serial number |\n| expiry_date | date(dd.mm.yyyy) | Product expiry date |\n| sold_quant | number | The number of sold products |\n| return_quant | number | The number of returned products |\n| on_balance | string | The status of the product that detemines weither the client's balance is positive or negative (Y - yes, N - no). Current field is used when the `inventory_kind is equipment` |\n| card_code | string | Unique product card code |\n| warehouse_code | string | Warehouse code |\n| bonus_id | number | Bonus ID of an action |\n| action_name | string | Action name that is found by Bonus ID |\n| order_consignments | array | Array with data about the consignment in the order |\n| consignment_unit_id | number | Unique consignment id |\n| consignment_date | date(dd.mm.yyyy) | Consignment date |\n| consignment_amount | number | Consignment amount |"
			},
			"response": []
		},
		{
			"name": "Return / Import",
			"id": "e2ec0a4f-a962-4751-a867-9028f305f42b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"return\": [\r\n    {\r\n      \"filial_code\": \"\",\r\n      \"external_id\": \"\",\r\n      \"deal_id\": \"\",\r\n      \"subfilial_code\": \"\",\r\n      \"order_deal_id\": \"\",\r\n      \"delivery_number\": \"\", \r\n      \"delivery_date\": \"\",\r\n      \"booked_date\": \"\",\r\n      \"deal_time\": \"\",\r\n      \"status\": \"\",\r\n      \"sales_manager_code\": \"\",\r\n      \"expeditor_code\": \"\",\r\n      \"person_code\": \"\",\r\n      \"currency_code\": \"\",\r\n      \"owner_person_code\": \"\",\r\n      \"manager_code\": \"\",\r\n      \"van_code\": \"\",\r\n      \"contract_code\": \"\",\r\n      \"note\": \"\",\r\n      \"invoice_number\": \"\",\r\n      \"payment_type_code\": \"\",\r\n      \"return_products\": [\r\n        {\r\n          \"external_id\": \"\",\r\n          \"product_unit_id\": \"\",\r\n          \"product_code\": \"\",\r\n          \"serial_number\": \"\",\r\n          \"card_code\": \"\",\r\n          \"expiry_date\": \"\",\r\n          \"return_quant\": \"\",\r\n          \"product_price\": \"\",\r\n          \"on_balance\": \"\",\r\n          \"margin_kind\": \"\",\r\n          \"margin_value\": \"\",\r\n          \"vat_percent\": \"\",\r\n          \"inventory_kind\": \"\",\r\n          \"price_type_code\": \"\",\r\n          \"warehouse_code\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mdeal/return$import",
				"description": "The interface allows you to upload data on order returns from third-party software to the Smartup X . This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"return\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"deal_id\": \"\",\n      \"subfilial_code\": \"\",\n      \"order_deal_id\": \"\",\n      \"delivery_number\": \"\", \n      \"delivery_date\": \"\",\n      \"booked_date\": \"\",\n      \"room_code\": \"\",\n      \"robot_code\": \"\",\n      \"deal_time\": \"\",\n      \"status\": \"\",\n      \"sales_manager_code\": \"\",\n      \"expeditor_code\": \"\",\n      \"person_code\": \"\",\n      \"currency_code\": \"\",\n      \"owner_person_code\": \"\",\n      \"manager_code\": \"\",\n      \"van_code\": \"\",\n      \"contract_code\": \"\",\n      \"note\": \"\",\n      \"invoice_number\": \"\",\n      \"payment_type_code\": \"\",\n      \"return_products\": [\n        {\n          \"external_id\": \"\",\n          \"product_unit_id\": \"\",\n          \"product_code\": \"100\",\n          \"serial_number\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"return_quant\": \"10\",\n          \"product_price\": \"777\",\n          \"on_balance\": \"\",\n          \"margin_kind\": \"\",\n          \"margin_value\": \"\",\n          \"vat_percent\": \"\",\n          \"inventory_kind\": \"G\",\n          \"price_type_code\": \"777\",\n          \"warehouse_code\": \"101\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| return | array | yes | Array with order data |\n| filial_code | string | optional | Organization unique code |\n| external_id | string | optional | Order ID assigned by third party software |\n| deal_id | number | optional | Order ID assigned by Smartup system |\n| subfilial_code | string | no | Unique project code |\n| order_deal_id | string | no | Order ID to which the order is being returned |\n| delivery_number | string | no | Invoice number |\n| deal_time | date(dd.mm.yyyy hh24:mi:ss) | yes | Order return date |\n| delivery_date | date(dd.mm.yyyy) | yes | Return delivery date |\n| booked_date | date(dd.mm.yyyy) | no | Booking date |\n| status | string | yes | Order status ( D - draft, A - archived) |\n| room_code | string | yes | Unique workspace code, where the return was accepted |\n| robot_code | string | yes | The unique code of the state where the return was accepted |\n| sales_manager_code | string | yes | Unique manager code |\n| forwarder_code | string | no |  |\n| person_code | string | yes | Unique client code |\n| currency_code | string | yes | Unique return currency code |\n| expeditor_code | string | no | Expeditor code |\n| warehouse_code | string | yes | Unique warehouse code for the return of goods and materials |\n| contract_code | string | no | Unique contract code |\n| payment_type_code | string | no | Payment type code |\n| owner_person_code | string | no | Unique owner code |\n| manager_code | string | no | Unique manager code |\n| van_code | string | no | State vehicle number |\n| invoice_number | string | no | Invoice number |\n| note | string | no | Return Notes |\n| return_products | array | yes | Array with data about the article of goods and materials in the return |\n| external_id | string | no | Identifier of the inventory item in the return, assigned by third-party software |\n| product_unit_id | number | no | Item ID in the return |\n| product_code | string | yes | Unique merchandise code |\n| serial_number | string | no | Serial number |\n| card_code | string | no | Card number |\n| expiry_date | date(dd.mm.yyyy) | no | Expiration date of goods and materials in return |\n| return_quant | number | yes | Quantity of goods and materials in return |\n| product_price | number | yes | Inventory price |\n| margin_amount | number | no | Amount of discount/markup |\n| margin_kind | string | no | Type of discount/markup for each merchandise. It can be both in percentage and in the sum value (P - percentage, A - amount) |\n| on_balance | string | no | The balance of the person (Y - yes, N - no) |\n| margin_value | number | no | The value of the discount / markup for each item and material |\n| vat_percent | number | no | VAT (%) |\n| inventory_kind | string | no | Type of goods and materials (P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| price_type_code | string | yes | Unique price type code, in return |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Return / Export",
			"id": "33b22837-d294-4d42-bd58-12524ccd0327",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"deal_id\": \"\",\r\n  \"begin_return_date\": \"\",\r\n  \"end_return_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mdeal/return$export",
				"description": "The service exports return data for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"deal_id\": \"\",\n  \"begin_return_date\": \"\",\n  \"end_return_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"return\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"deal_id\": \"\",\n      \"deal_time\": \"\",\n      \"subfilial_code\": \"\",\n      \"order_deal_id\": \"\",\n      \"delivery_date\": \"\",\n      \"delivery_number\": \"\",\n      \"booked_date\": \"\",\n      \"room_id\": \"\",\n      \"room_code\": \"\",\n      \"robot_code\": \"\",\n      \"sales_manager_code\": \"\",\n      \"expeditor_code\": \"\",\n      \"person_code\": \"\",\n      \"owner_person_code\": \"\",\n      \"van_code\": \"\",\n      \"contract_code\": \"\",\n      \"invoice_number\": \"\",\n      \"payment_type_code\": \"\",\n      \"note\": \"\",\n      \"manager_code\": \"\",\n      \"total_amount\": \"\",\n      \"status\": \"\",\n      \"currency_code\": \"\",\n      \"return_products\": [\n        {\n          \"external_id\": \"\",\n          \"product_unit_id\": \"\",\n          \"product_code\": \"\",\n          \"product_name\": \"\",\n          \"expiry_date\": \"\",\n          \"on_balance\": \"\",\n          \"return_quant\": \"\",\n          \"serial_number\": \"\",\n          \"product_price\": \"\",\n          \"margin_amount\": \"\",\n          \"margin_kind\": \"\",\n          \"margin_value\": \"\",\n          \"vat_percent\": \"\",\n          \"vat_amount\": \"\",\n          \"sold_amount\": \"\",\n          \"inventory_kind\": \"\",\n          \"price_type_code\": \"\",\n          \"warehouse_code\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_codes | array | no | Array with data of organizations participating in the order (!) |\n| filial_code | string | no | Unique code of the organization involved in the return process |\n| external_id | string | no | Order ID assigned by third party software |\n| deal_id | number | no | Order ID in the Smartup system |\n| begin_return_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by return begin date |\n| end_return_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by return end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n! - the array is used when it is necessary to upload the data of two or more organizations. If less than two organizations are involved in the process, the `filial _ code` parameter is used outside the array.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| return | array | Array with order return data |\n| filial_code | string | Unique code of the organization involved in the return process |\n| external_id | string | Order ID assigned by third party software |\n| deal_id | number | Order ID in Smartup system |\n| order_deal_id | number | The ID of an order by which return is going to be made. |\n| delivery_number | string | Invoice number |\n| subfilial_code | string | Project code |\n| delivery_date | date(dd.mm.yyyy) | Return delivery date |\n| booked_date | date(dd.mm.yyyy) | Return booking date |\n| total_amount | number | Amount TOTAL |\n| deal_time | date(dd.mm.yyyy hh24:mi:ss) | Date and time of return |\n| status | string | Order status (D - draft, A - archived) |\n| currency_code | string | Unique currency code for integration with third-party software |\n| <br><br><p>room_id</p><br><br> | number | Workspace ID |\n| room_code | string | Workspace Code |\n| robot_code | string | Staff Unit Code |\n| sales_manager_code | string | Sales representative code |\n| expeditor_code | string | Expeditor code |\n| person_code | string | Client code |\n| owner_person_code | string | Unique owner code |\n| van_code | string | Vehicle code |\n| contract_code | string | Contract code |\n| invoice_number | string | Invoice number |\n| payment_type_code | string | Payment type code |\n| note | string | Note |\n| manager_code | string | Unique manager code for integration with third-party software |\n| return_products | array | Array with data on goods and materials in return |\n| external_id | string | Item ID in the return, assigned by third-party software |\n| product_unit_id | number | Item ID in the return |\n| product_code | string | Unique inventory code in the return for integration with third-party software |\n| product_name | string | Name of goods and materials in return |\n| expiry_date | date(dd.mm.yyyy) | Expiry date of inventory |\n| return_quant | number | Quantity of goods and materials in return |\n| serial_number | string | Serial number |\n| product_price | number | Price of goods and materials in return |\n| margin_amount | number | The amount of discount / markup for each item and material |\n| margin_kind | string | Type of discount/markup for each merchandise. It can be both in percentage and in the sum value (P - percentage, A - amount) |\n| margin_value | number | The value of the discount / markup for each item and material |\n| vat_percent | number | VAT (%) |\n| vat_amount | number | VAT amount |\n| card_code | string | Card number |\n| sold_amount | number | Amount of goods sold |\n| inventory_kind | string | Type of goods and materials (P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| price_type_code | string | Price type code |\n| on_balance | string | The balance of a person (Y - yes, N - no) |\n| warehouse_code | string | Warehouse code |"
			},
			"response": []
		},
		{
			"name": "Purchase / Import",
			"id": "ad6d64ad-f327-44bd-97e5-439e8702b9fa",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"purchase\": [\r\n    {\r\n        \"filial_code\": \"\",\r\n        \"external_id\": \"\",\r\n        \"purchase_id\": \"\",\r\n        \"purchase_number\": \"\",\r\n        \"purchase_time\": \"\",\r\n        \"order_id\": \"\",\r\n        \"status_code\": \"\",\r\n        \"input_date\": \"\",\r\n        \"supplier_code\": \"\",\r\n        \"contract_code\": \"\",\r\n        \"warehouse_code\": \"\",\r\n        \"currency_code\": \"\",\r\n        \"invoice_number\": \"\",\r\n        \"invoice_date\": \"\",\r\n        \"total_margin_kind\": \"\",\r\n        \"total_margin_value\": \"\",\r\n        \"note\": \"\",\r\n        \"posted\": \"\",\r\n        \"purchase_items\": [\r\n          {\r\n            \"external_id\": \"\",\r\n            \"purchase_item_id\": \"\",\r\n            \"product_code\": \"\",\r\n            \"order_item_id\": \"\",\r\n            \"on_balance\": \"\",\r\n            \"serial_number\": \"\",\r\n            \"inventory_kind\": \"\",\r\n            \"card_code\": \"\",\r\n            \"expiry_date\": \"\",\r\n            \"quantity\": \"\",\r\n            \"price\": \"\",\r\n            \"margin_kind\": \"\",\r\n            \"margin_value\": \"\",\r\n            \"vat_percent\": \"\",\r\n            \"vat_amount\": \"\"\r\n          }\r\n        ]\r\n      }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/purchase$import",
				"description": "The service imports purchase data according to the parameter values passed to the service in the request. This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"purchase\": [\n    {\n        \"filial_code\": \"\",\n        \"external_id\": \"\",\n        \"purchase_id\": \"\",\n        \"purchase_number\": \"7\",\n        \"purchase_time\": \"02.09.2021\",\n        \"order_id\": \"\",\n        \"status_code\": \"100\",\n        \"input_date\": \"02.09.2021\",\n        \"supplier_code\": \"101\",\n        \"contract_code\": \"\",\n        \"warehouse_code\": \"100\",\n        \"currency_code\": \"860\",\n        \"invoice_number\": \"1\",\n        \"invoice_date\": \"02.09.2021\",\n        \"total_margin_kind\": \"\",\n        \"total_margin_value\": \"\",\n        \"note\": \"Receipts to warehouse\",\n        \"posted\": \"Y\",\n        \"purchase_items\": [\n          {\n            \"external_id\": \"\",\n            \"purchase_item_id\": \"\",\n            \"product_code\": \"100\",\n            \"order_item_id\": \"\",\n            \"on_balance\": \"\",\n            \"serial_number\": \"\",\n            \"inventory_kind\": \"G\",\n            \"card_code\": \"\",\n            \"expiry_date\": \"\",\n            \"quantity\": \"1000\",\n            \"price\": \"3500\",\n            \"margin_kind\": \"\",\n            \"margin_value\": \"\",\n            \"vat_percent\": \"\",\n            \"vat_amount\": \"\"\n          }\n        ]\n      }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| purchase | array | yes | Purchase data array |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Identifier of the arrival of goods and materials credited to the warehouse, assigned by third-party software |\n| purchase_id | number | no | Identifier of the arrival of goods and materials credited to the warehouse, assigned by the Smartup system |\n| purchase_number | string | no | Inventory purchase invoice number |\n| purchase_time | date(dd.mm.yyyy hh24:mi:ss) | yes | Date and time of purchase |\n| input_date | date(dd.mm.yyyy hh24:mi:ss) | no | Date of receiving inventories |\n| order_id | number | no | Order ID |\n| supplier_code | string | yes | Vendor code |\n| warehouse_code | string | no | Unique warehouse code |\n| currency_code | string | yes | Unique currency code for the purchase of goods and materials |\n| contract_code | string | no | Unique code of the purchase contract for goods and materials |\n| invoice_number | string | no | Invoice number |\n| invoice_date | date(dd.mm.yyyy) | no | Invoice date |\n| total_margin_kind | string | no | Total margin type |\n| total_margin_value | string | no | Total margin value |\n| note | string | no | Note on the purchase of goods and materials |\n| status_code | string | yes | Unique status code |\n| posted | string | yes | Completed (Y/N) |\n| purchase_items | array | yes | Array with data on the item of goods and materials in the purchase |\n| external_id | string | no | Identifier of the inventory item in the purchase, assigned by third-party software |\n| purchase_item_id | number | no | Identifier of the inventory item in the purchase, assigned by the Smartup system |\n| order_item_id | number | no | ID of order inventory |\n| product_code | string | yes | Inventory code |\n| on_balance | string | yes | On balance |\n| serial_number | string | no | Serial number |\n| inventory_kind | string | yes | Type of goods and materials (P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| quantity | number | yes | Quantity of goods and materials in the purchase |\n| price | number | yes | The price of goods and materials in the purchase |\n| card_code | string | no | Inventory card number |\n| expiry_date | date(dd.mm.yyyy) | no | Expiration date of goods and materials in the purchase |\n| margin_kind | string | no | Type of discount/markup for each merchandise. It can be both in percentage and in sum value (P - percentage, A - amount) |\n| margin_value | number | no | The value of the discount / markup for each item and material |\n| vat_percent | number | no | VAT (%) |\n| vat_amount | number | no | VAT amount |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Purchase / Export",
			"id": "0836e260-f361-4ce0-bcec-a5d79f8b95e4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"purchase_id\": \"\",\r\n  \"begin_purchase_date\": \"\",\r\n  \"end_purchase_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/purchase$export",
				"description": "Uploading data on purchases for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"purchase_id\": \"\",\n  \"begin_purchase_date\": \"\",\n  \"end_purchase_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n ```\n\n**Response**\n\n``` json\n{\n  \"purchase\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"purchase_id\": \"\",\n      \"purchase_time\": \"\",\n      \"purchase_number\": \"\",\n      \"input_date\": \"\",\n      \"supplier_code\": \"\",\n      \"invoice_number\": \"\",\n      \"invoice_date\": \"\",\n      \"order_id\": \"\",\n      \"currency_code\": \"\",\n      \"contract_code\": \"\",\n      \"total_margin_kind\": \"\",\n      \"total_margin_value\": \"\",\n      \"warehouse_code\": \"\",\n      \"status_code\": \"\",\n      \"note\": \"\",\n      \"posted\": \"\",\n      \"purchase_items\": [\n        {\n          \"external_id\": \"\",\n          \"purchase_item_id\": \"\",\n          \"product_code\": \"\",\n          \"inventory_kind\": \"\",\n          \"order_item_id\": \"\",\n          \"on_balance\": \"\",\n          \"serial_number\": \"\",\n          \"card_code\": \"\",\n          \"expiry_date\": \"\",\n          \"base_price\": \"\",\n          \"quantity\": \"\",\n          \"price\": \"\",\n          \"margin_kind\": \"\",\n          \"margin_value\": \"\",\n          \"vat_percent\": \"\",\n          \"vat_amount\": \"\",\n          \"marking_codes\": [\n            {\n              \"marking_code\": \"\"\n            },\n            {\n              \"marking_code\": \"\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_codes | array | no | Array with data of organizations involved in the procurement process (!) |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Inventory purchase ID assigned by third-party software |\n| purchase_id | number | no | Purchase ID in the Smartup system |\n| begin_purchase_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by purchase begin date |\n| end_purchase date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by purchase end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n! - the array is used when it is necessary to upload the data of two or more organizations. If less than two organizations are involved in the process, the `filial _ code` parameter is used outside the array.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| purchase | array | Purchase data array |\n| filial_code | string | Organization unique code |\n| external_id | string | Identifier of the arrival of goods and materials credited to the warehouse, assigned by third-party software |\n| purchase_code | string | Identifier of the arrival of goods and materials credited to the warehouse, assigned by the Smartup system |\n| purchase_number | string | Inventory purchase invoice number |\n| purchase_time | date(dd.mm.yyyy hh24:mi:ss) | Date and time of purchase |\n| input_date | date(dd.mm.yyyy hh24:mi:ss) | Date and time of receiving inventories of purchase |\n| order_id | number | Order ID |\n| supplier_code | string | Vendor code |\n| warehouse_code | string | Unique warehouse code. It can also be the list of warehouse code, which can be counted with comma. For example: code1, code2... |\n| currency_code | string | Unique currency code for the purchase of goods and materials |\n| contract_code | string | Unique code of the purchase contract for goods and materials |\n| invoice_number | string | Invoice number |\n| invoice_date | date(dd.mm.yyyy) | Invoice date |\n| total_margin_kind | string | Total margin type |\n| total_margin_value | string | Total margin value |\n| note | string | Note on the purchase of goods and materials |\n| status_code | string | Unique status code |\n| posted | string | Completed (Y/N) |\n| purchase_items | array | Array with data on the item of goods and materials in the purchase |\n| external_id | string | Identifier of the inventory item in the purchase, assigned by third-party software |\n| purchase_item_id | number | Identifier of the inventory item in the purchase, assigned by the Smartup system |\n| product_code | string | Inventory code |\n| order_item_id | number | ID of order inventory |\n| on_balance | string | On balance |\n| serial_number | string | Serial number |\n| inventory_kind | string | Type of goods and materials (P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| quantity | number | Quantity of goods and materials in the purchase |\n| price | number | The price of goods and materials in the purchase |\n| card_code | string | Inventory card number |\n| expiry_date | date(dd.mm.yyyy) | Expiration date of goods and materials in the purchase |\n| base_price | number | The price entered in the purchase to ensure transparency of the markup |\n| margin_kind | string | Type of discount/markup for each merchandise. It can be both in percentage and in sum value (P - percentage, A - amount) |\n| margin_value | number | The value of the discount / markup for each item and material |\n| vat_percent | number | VAT (%) |\n| vat_amount | number | VAT amount |\n| marking_codes | array | Array with data of attaching marking codes for product unit |\n| marking_code | number | Marking code of product |"
			},
			"response": []
		},
		{
			"name": "Payments from clients / Import",
			"id": "9798e8b7-3d20-4bdb-8b52-64bf0a152064",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"cashin\": [\r\n    {\r\n      \"filial_code\": \"\",\r\n      \"external_id\": \"\",\r\n      \"cashin_id\": \"\",\r\n      \"cashin_time\": \"\",\r\n      \"cashin_date\": \"\",\r\n      \"cashin_number\": \"\",\r\n      \"bill_collector_code\": \"\",\r\n      \"client_code\": \"\",\r\n      \"subfilial_code\": \")\",\r\n      \"contract_code\": \"\",\r\n      \"payment_type_code\": \"\",\r\n      \"currency_code\": \"\",\r\n      \"cashbox_code\": \"\",\r\n      \"bank_account_code\": \"\",\r\n      \"amount\": \"\",\r\n      \"posted\": \"\",\r\n      \"note\": \"\",\r\n      \"bank_trans_number\": \"\",\r\n      \"bank_trans_date\": \"\",\r\n      \"purpose\": \"\"\r\n    }\r\n\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/trade/txs/tcs/cashin$import",
				"description": "The service imports data on payments from clients, in accordance with the values of the parameters passed to the service in the request. This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"cashin\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"cashin_id\": \"\",\n      \"cashin_time\": \"\",\n      \"cashin_date\": \"\",\n      \"cashin_number\": \"\",\n      \"bill_collector_code\": \"\",\n      \"client_code\": \"\",\n      \"subfilial_code\": \"\",\n      \"contract_code\": \"\",\n      \"payment_type_code\": \"\",\n      \"currency_code\": \"\",\n      \"cashbox_code\": \"\",\n      \"bank_account_code\": \"\",\n      \"amount\": \"\",\n      \"posted\": \"\",\n      \"note\": \"\",\n      \"bank_trans_number\": \"\",\n      \"bank_trans_date\": \"\",\n      \"purpose\": \"\"\n    }\n  ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| cashin | array | yes | Array with payment data from the client |\n| filial_code | string | no | Unique region code |\n| external_id | string | no | Identifier of the arrival of goods and materials credited to the warehouse, assigned by third-party software |\n| cashin_id | number | no | Payment ID assigned by Smartup |\n| cashin_time | date(dd.mm.yyyy hh24:mi:ss) | yes | Date and time of receipt of payment from the client |\n| cashin_date | date(dd.mm.yyyy) | yes | Date of receipt of payment from the client |\n| cashin_number | string | no | Payment document number |\n| bill_collector_code | string | no | Collector unique code |\n| client_code | string | yes | Unique client code |\n| subfilial_code | string | no | Unique project code |\n| contract_code | string | no | Unique code of the purchase contract for goods and materials |\n| payment_type_code | string | yes | Unique payment type code |\n| currency_code | string | yes | Unique currency code for the purchase of goods and materials |\n| cashbox_code | string | yes | Unique checkout code |\n| bank_account_code | string | yes | Unique current account code |\n| amount | number | yes | Sum |\n| posted | string | yes | Completed (Y/N) |\n| note | string | no | Payment note |\n| bank_trans_number | number | no | The number of transfer |\n| bank_trans_date | date(dd.mm.yyyy) | no | The date of transfer |\n| purpose | string | no | The purpose of transfer |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Payments from clients / Export",
			"id": "fa3fbd10-7611-46fe-bca0-8b204b3d9610",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"cashin_id\": \"\",\r\n  \"begin_cashin_date\": \"\",\r\n  \"end_cashin_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/trade/txs/tcs/cashin$export",
				"description": "Through the interface, the service exports data on payments from clients for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"cashin_id\": \"\",\n  \"begin_cashin_date\": \"\",\n  \"end_cashin_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"cashin\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"cashin_id\": \"\",\n      \"cashin_time\": \"\",\n      \"cashin_date\": \"\",\n      \"cashin_number\": \"\",\n      \"bill_collector_code\": \"\",\n      \"client_code\": \"\",\n      \"subfilial_code\": \"\",\n      \"contract_code\": \"\",\n      \"payment_type_code\": \"\",\n      \"currency_code\": \")\",\n      \"cashbox_code\": \"\",\n      \"bank_account_code\": \"\",\n      \"amount\": \"\",\n      \"posted\": \"\",\n      \"note\": \"\"\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Client payment ID assigned by third party software |\n| cashin_id | number | no | Payment ID from the client, in the Smartup system |\n| begin_cashin_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by payments from clients begin date |\n| end_cashin_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by payments from clients end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| cashin | array | Array with payment data from the client |\n| filial_code | string | Unique region code |\n| external_id | string | Identifier of the arrival of goods and materials credited to the warehouse, assigned by third-party software |\n| cashin_id | number | Payment ID assigned by Smartup |\n| cashin_time | date(dd.mm.yyyy hh24:mi:ss) | Date and time of receipt of payment from the client |\n| cashin_date | date(dd.mm.yyyy) | Date of receipt of payment from the client |\n| cashin_number | string | Payment document number |\n| bill_collector_code | string | Collector unique code |\n| client_code | string | Unique client code |\n| subfilial_code | string | Unique project code |\n| contract_code | string | Unique code of the purchase contract for goods and materials |\n| payment_type_code | string | Unique payment type code |\n| currency_code | string | Unique currency code for the purchase of goods and materials |\n| cashbox_code | string | Unique checkout code |\n| bank_account_code | string | Unique current account code |\n| amount | number | Sum |\n| posted | string | Completed (Y/N) |\n| note | string | Payment note |\n| bank_transfer_number | number | The number of transfer |\n| bank_transfer_date | date(dd.mm.yyyy) | The date of transfer |\n| purpose | string | The purpose of transfer |"
			},
			"response": []
		},
		{
			"name": "Inventory price / Import",
			"id": "0c49002a-5ec8-4fab-bd5b-d18c89864649",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"inventory\": [\r\n    {\r\n      \"inventory_code\": \"\",\r\n      \"price_type\": [\r\n        {\r\n          \"price_type_code\": \"\",\r\n          \"card_code\": \"\",\r\n          \"price\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxs/mkf/product_price$import",
				"description": "The service loads prices for goods and materials from third-party software. This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n  \"inventory\": [\n    {\n      \"inventory_code\": \"\",\n      \"price_type\": [\n        {\n          \"price_type_code\": \"\",\n          \"card_code\": \"\",\n          \"price\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| inventory | array | yes | Array with data on goods and materials |\n| inventory_code | string | yes | Unique inventory code, set for integration with third-party software |\n| price_type_code | string | yes | Unique price type code |\n| card_code | string | no | Inventory card number |\n| price | number | yes | Price |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Inventory price / Export",
			"id": "310d319c-95b1-4121-ae4b-8b6acd0a4985",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxs/mkf/product_price$export",
				"description": "The service exports prices for goods and materials for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{}\n\n```\n\n**Response**\n\n``` json\n{\n  \"inventory\": [\n    {\n      \"inventory_code\": \"\",\n      \"price_type\": [\n        {\n          \"price_type_code\": \"\",\n          \"card_code\": \"\",\n          \"price\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n|  |  |  |  |\n\n**Description of response parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| inventory | array | yes | Array with data on goods and materials |\n| inventory_code | string | yes | Unique inventory code, set for integration with third-party software |\n| price_type_code | string | yes | Unique price type code |\n| card_code | string | no | Inventory card number |\n| price | number | yes | Price |"
			},
			"response": []
		},
		{
			"name": "Visit / Export",
			"id": "27635c47-6241-4ee4-9d16-7ce989b347c9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"visit_id\": \"\",\r\n  \"external_id\": \"\",\r\n  \"begin_visit_date\": \"\",\r\n  \"end_visit_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/trade/txs/tvt/visit$export",
				"description": "The service exports data on visits for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"visit_id\": \"\",\n  \"external_id\": \"\",\n  \"begin_visit_date\": \"\",\n  \"end_visit_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"visit\": [\n        {\n            \"visit_headers\": [\n                {\n                    \"visit_id\": \"\",\n                    \"filial_code\": \"\",\n                    \"visit_date\": \"\",\n                    \"visit_start_time\": \"\",\n                    \"visit_end_time\": \"\",\n                    \"person_code\": \"\",\n                    \"person_id\": \"\",\n                    \"room_id\": \"\",\n                    \"room_code\": \"\",\n                    \"sales_manager_code\": ,\n                    \"visit_start_location\": \"\",\n                    \"visit_end_location\": ,\n                    \"is_planned\": \"\"\n                }\n            ],\n            \"stocks\": [\n            {\n                \"stock_product_code\": \"\",\n                \"stock_quant\": \"\",\n                \"stock_expiry_date\": \"\",\n                \"stock_card_code\": \"\"\n            }\n],\n            \"assortment\": [\n            {\n                 \"assortment_product_code\": \"\",\n                 \"has_assortment\": \"\",\n                 \"assortment_product_quant\": \"\",\n                 \"assortment_unavail_reason_name\": \"\"\n             }\n],\n            \"planograms\": [\n            {\n                \"planogram_name\": \"\",\n                \"planogram_plan_quant\": \"\",\n                \"planogram_plan_sku\": \"\",\n                \"planogram_fact_quant\": \"\",\n                \"planogram_fact_sku\": \"\",\n                \"planogram_has_photo\": \"\",\n                \"planogram_products\": \"\",\n                \"planogram_product_code\": \"\",\n                \"planogram_product_plan_quant\": \"\",\n                \"planogram_product_fact_quant\": \"\",\n                \"planogram_match\": \"\",\n                \"planogram_not_match_reason_name\": \"\"\n            }\n],\n            \"shelf_shares\": [\n                {\n                    \"own_shelf_shares\": [],\n                    \"competitor_inventories\": []\n                }\n            ],\n            \"price_tags\": [\n            {            \n                \"price_tag_product_code\": \"\",\n                \"has_price_tag\": \"\",\n                \"price\": \"\",\n                \"no_price_tag_reason_name\": \"\"\n            }\n],\n            \"displays\": [\n            {\n                \"display_name\": \"\",\n                \"has_display\": \"\",\n                \"no_display_reason_name\": \"\"\n            }\n],\n            \"quizzes\": [\n                {\n                    \"quiz_sets\": [\n                   {\n                         \"quiz_name\": \"\",\n                         \"answer\": \"\",\n                         \"has_quiz_photo\": \"\"\n                    }\n]\n                }\n            ],\n            \"comments\": [\n                {\n                    \"comment_name\": \"\",\n                    \"comment_created_by_name\": \"\"\n                }\n            ],\n            \"note\": null\n        }\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_code | string | no | Organization unique code |\n| visit_id | string | no | Visit ID of the client, in the Smartup system |\n| external_id | number | no | Client Visit ID assigned by third party software |\n| begin_visit_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by visit begin date |\n| end_visit_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by visit end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n! - the array is used when it is necessary to upload the data of two or more organizations. If less than two organizations are involved in the process, the `filial _ code` parameter is used outside the array.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| visit | array | Array with data on visits |\n| filial_code | string | Organization unique code |\n| visit_id | number | Identifier of the visit |\n| visit date | date(dd.mm.yyyy hh24:mi:ss) | The date when there was a visit |\n| visit_start_time | date(dd.mm.yyyy hh24:mi:ss) | The beginning time of the visit |\n| visit_end_time | date(dd.mm.yyyy hh24:mi:ss) | The end time of the visit |\n| person_code | string | Person code. Person is a sale point |\n| person_id | number | Person id. Person is a sale point |\n| room_id | number | Workspace ID, in which visit is going to be made |\n| room_code | string | Workspace code |\n| sales_manager_code | string | Sales representative code, where sales representative is the person who can make a visit |\n| visit_start_location | string | The precise location when visit has started |\n| visit_end_location | string | The precise location when visit has ended |\n| is_planned | string | Whether the visit is by plan or not (Y - yes, N - no) |\n| stocks | array | Array with data on balance |\n| stock_product_code | string | Inventory code in balance |\n| stock_quant | number | The number of inventories left in balance |\n| stock_expiry_date | date(dd.mm.yyyy) | The expiry date of inventories left in balance |\n| stock_card_code | string | Card Code of inventories |\n| assortment | array | Array with data on product proposal |\n| assortment_product_code | string | Inventory code in product proposal |\n| has_assortment | string | Whether product proposal is available or not (Y - yes, N - no) |\n| assortment_product_quant | number | The number of inventories available in product proposal. If `has_assortment` is `N`, `assortment_product_quant` = `null`, which means current value will be empty |\n| assortment_unavail_reason_name | string | The reason of absence of product proposal, If `has_assortment` is `N` |\n| planograms | array | Array with data on planogram |\n| planogram_name | string | The name of the planogram |\n| planogram_plan_quant | number | The number of goods in planogram by plan |\n| planogram_plan_sku | number | The number of SKU in planogram by plan |\n| planogram_fact_quant | number | The number of goods in planogram in fact |\n| planogram_fact_sku | number | The number of SKU in planogram in fact |\n| planogram_has_photo | string | Whether photo of planogram is available or not, (Y - yes, N - no) |\n| planogram_products | array | Array with data on SKU in planogram |\n| planogram_product_code | string | The code of SKU in planogram |\n| planogram_product_plan_quant | number | The number of inventories in SKU by plan |\n| planogram_product_fact_quant | number | The number of inventories in SKU in fact |\n| planogram_match | string | Whether SKU by plan matches SKU in fact or not (Y - yes, N - no) |\n| planogram_not_match_reason_name | string | The reason of nonconcurrence of product SKU by plan and in SKU in fact, If `planogram_match` is `N` |\n| shelf_share | array | Array with data on all inventories |\n| own_shelf_shares | array | Array with data on shelf share |\n| own_shelf_share_product_code | string | Inventory code of shelf share |\n| own_shelf_share_product_quant | number | The number of inventories of shelf share |\n| competitor_inventories | array | Array with data on competitor inventories |\n| competitor_inventory_product_code | string | Inventory code of competitor inventories |\n| competitor_inventory_product_quant | number | The number of inventories of competitor inventories |\n| price_tags | array | Array with data on price tags |\n| price_tag_product_code | string | Inventory code |\n| has_price_tag | string | Whether inventory has price tag or not (Y - yes, N - no) |\n| price | number | Price of the inventories |\n| no_price_tag_reason_name | string | The reason of absence of price tag, If `has_price_tag` is `N` |\n| displays | array | Array with data on POS-materials |\n| display_name | string | The name of POS-material |\n| has_display | string | Whether POS-materials are available or not, (Y - yes, N - no) |\n| no_display_reason_name | string | The reason of absence of POS-materials, if `has_display` is `N` |\n| quizzes | array | Array with data on questions |\n| quiz_sets | array | Array with data on questionnaires |\n| quiz_name | string | The name of questionnaire |\n| answer | string | The answer to the questions |\n| has_quiz_photo | string | Whether questionnaire has photo or not (Y - yes, N - no) |\n| comments | array | Array with data on comments |\n| comment_name | string | The name of comment |\n| comment_created_by_name | string | The person that left the comment |\n| note | string | The note to the visit |"
			},
			"response": []
		},
		{
			"name": "Contract / Import",
			"id": "28d789eb-b02b-4b9c-af37-df895f15e5ce",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"contract\": [\r\n    {\r\n      \"filial_code\": \"\",\r\n      \"external_id\": \"\",\r\n      \"contract_id\": \"\",\r\n      \"code\": \"\",\r\n      \"contract_date\": \"\",\r\n      \"contract_number\": \"\",\r\n      \"name\": \"\",\r\n      \"person_code\": \"\",\r\n      \"currency_code\": \"\",\r\n      \"expiry_date\": \"\",\r\n      \"note\": \"\",\r\n      \"initial_amount\": \"\",\r\n      \"initial_expiry_date\": \"\",\r\n      \"state\": \"\",\r\n      \"sub_contracts\": [\r\n        {\r\n          \"sub_contract_id\": \"\",\r\n          \"external_id\": \"\",\r\n          \"sub_contract_date\": \"\",\r\n          \"sub_contract_number\": \"\",\r\n          \"amount\": \"\",\r\n          \"expiry_date\": \"\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkf/contract$import",
				"description": "StartFragment\n\nThe interface allows you to upload data about contracts from third-party software to the Smartup X . This interface supports bulk data ingestion in a single request\n\n**Request**\n\n``` json\n{\n  \"contract\": [\n    {\n      \"filial_code\": \"\",\n      \"external_id\": \"\",\n      \"contract_id\": \"\",\n      \"code\": \"\",\n      \"contract_date\": \"\",\n      \"contract_number\": \"\",\n      \"name\": \"\",\n      \"person_code\": \"\",\n      \"currency_code\": \"\",\n      \"expiry_date\": \"\",\n      \"note\": \"\",\n      \"initial_amount\": \"\",\n      \"initial_expiry_date\": \"\",\n      \"state\": \"\",\n      \"sub_contracts\": [\n        {\n          \"sub_contract_id\": \"\",\n          \"external_id\": \"\",\n          \"sub_contract_date\": \"\",\n          \"sub_contract_number\": \"\",\n          \"amount\": \"\",\n          \"expiry_date\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\nEndFragment\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| **Parameter** | **Data type** | **Required** | **Description** |\n| --- | --- | --- | --- |\n| filial_code | string | yes | Organization code |\n| external_id | string | no | Contract ID assigned by third party software |\n| contract_id | number | no | Contract unique ID |\n| code | string | no | Contract code |\n| contract_date | date(dd.mm.yyyy) | yes | Contract date |\n| contract_number | string | yes | Contract number |\n| name | string | yes | The name of contract |\n| person_code | string | yes | The person who enters into a contract (it can be natural person or legal entity) |\n| currency_code | string | yes | Currency unique code |\n| expiry_date | date(dd.mm.yyyy) | no | Contract expiration date |\n| note | string | no | Note |\n| initial_amount | number | no | The initial amount of money, when first contract was entered |\n| initial_expiry_date | date | no | The initial date of expiration, when first contract was entered |\n| state | string | yes | Status (Active / Inactive), where A - active, P - passive |\n| sub_contracts | array |  | Array with data about additional agreements connected to contracts |\n| sub_contract_id | number | no | Additional agreement unique ID |\n| external_id | string | no | Additional agreement ID assigned by third party software |\n| sub_contract_date | date(dd.mm.yyyy) | yes | Additional agreement date |\n| sub_contract_number | string | yes | Additional agreement number |\n| amount | number | no | The amount of money (last set, if there was change in amount of money) |\n| expiry_date | date(dd.mm.yyyy) | no | Expiration date of contract (last set, if there was change in date of expiration) |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Contract / Export",
			"id": "cc69d97f-1b7f-4ee9-8fef-740e3da488dc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": {\r\n    \"filial_code\": \"\"\r\n  },\r\n  \"code\": \"\",\r\n  \"contract_id\": \"\",\r\n  \"begin_contract_date\": \"\",\r\n  \"end_contract_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkf/contract$export",
				"description": "The service exports data on contracts for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": {\n    \"filial_code\": \"\"\n  },\n  \"code\": \"\",\n  \"contract_id\": \"\",\n  \"begin_contract_date\": \"\",\n  \"end_contract_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"contract\": [\n    {\n      \"filial_code\": \"\",\n      \"contract_id\": \"\",\n      \"code\": \"\",\n      \"contract_date\": \"\",\n      \"contract_number\": \"\",\n      \"name\": \"\",\n      \"person_code\": \"\",\n      \"currency_code\": \"\",\n      \"expiry_date\": \"\",\n      \"note\": \"\",\n      \"initial_amount\": \"\",\n      \"initial_expiry_date\": \"\",\n      \"state\": \"\",\n      \"sub_contracts\": [\n        {\n          \"sub_contract_id\": \"\",\n          \"sub_contract_date\": \"\",\n          \"sub_contract_number\": \"\",\n          \"amount\": \"\",\n          \"expiry_date\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n```\n\n**Description of request parameters**\n\n| **Parameter** | **Data type** | **Required** | **Description** |\n| --- | --- | --- | --- |\n| filial_codes | array | no | Array with data of contracts |\n| filial_code | string | no | Unique filial code |\n| code | string | no | Contract code |\n| contract_id | number | no | Contract unique ID |\n| begin_contract_date | date(dd.mm.yyyy hh24:mi:ss) | no | The beginning date of the period of contract |\n| end_contract_date | date(dd.mm.yyyy hh24:mi:ss) | no | The ending date of the period of contract |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter contracts by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| **Parameter** | **Data type** | **Description** |\n| --- | --- | --- |\n| contract | array | Array with data about contracts |\n| code | string | Contract code |\n| filial_code | string | Organization code |\n| contract_id | number | Contract unique ID |\n| contract_date | date(dd.mm.yyyy) | Contract date |\n| contract_number | string | Contract number |\n| name | string | The name of contract |\n| person_code | string | The person who enters into a contract (it can be natural person or legal entity) |\n| currency_code | string | Unique currency code of contract |\n| expiry_date | date(dd.mm.yyyy) | Contract expiration date |\n| note | string | Note |\n| initial_amount | number | The initial amount of money, when first contract was entered |\n| initial_expiry_date | date(dd.mm.yyyy) | The initial date of expiration, when first contract was entered |\n| state | string | <br><br><p>Status (Active / Inactive), where A - active, P - passive</p><br><br> |\n| sub_contracts | array | Array with data about additional agreements connected to contracts |\n| sub_contract_id | number | Additional agreement unique ID |\n| sub_contract_date | date(dd.mm.yyyy) | Additional agreement date |\n| sub_contract_number | string | Additional agreement number |\n| amount | number | The amount of money (last set, if there was change in amount of money) |\n| expiry_date | date(dd.mm.yyyy) | Expiration date of contract (last set, if there was change in date of expiration) |"
			},
			"response": []
		},
		{
			"name": "Inventory Balance / Export",
			"id": "f0f9ae92-0c4e-4159-8b68-7b748a7e5921",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \r\n    \"warehouse_codes\": [\r\n       {\r\n           \"warehouse_code\": \"\"\r\n       }\r\n   ],\r\n   \"filial_code\": \"\",\r\n   \"begin_date\": \"15.02.2023\",\r\n   \"end_date\": \"15.03.2023\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkw/balance$export",
				"description": "The service exports data on balance of inventories for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{   \"warehouse_codes\": [\n       {\n           \"warehouse_code\": \"\"\n       }\n   ],\n   \"filial_code\": \"\",\n   \"begin_date\": \"15.02.2023\",\n   \"end_date\": \"15.03.2023\"   \n}\n\n```\n\nResponse\n\n``` json\n{\n  \"balance\": [\n    {\n      \"date\": \"16.02.2023\",\n      \"warehouse_id\": \"61\",\n      \"warehouse_code\": \"001wrh\",\n      \"product_code\": \"002pr\",\n      \"product_id\": \"21\",\n      \"card_code\": null,\n      \"expiry_date\": null,\n      \"serial_number\": null,\n      \"inventory_kind\": \"G\", //G, M, P\n      \"quantity\": \"1400\",\n      \"input_price\": \"14000\",\n      \"measure_code\": null,\n      \"groups\": [\n        {\n          \"group_code\": \"PRDGR:3\",\n          \"type_code\": \"102387\"\n        }\n      ]\n    }\n   ]\n  }\n\n```\n\n**Description of request parameters**\n\n| **Parameter** | **Data type** | **Required** | **Description** |\n| --- | --- | --- | --- |\n| warehouse_codes | array | no | Array with data of warehouses, which balances are related to |\n| warehouse_code | string | no | Warehouse code |\n| filial_code | string | no | Organization unique code |\n| begin_date | date(dd.mm.yyyy hh24:mi:ss) | yes | Filter by inventory balance begin date |\n| end_date | date(dd.mm.yyyy hh24:mi:ss) | yes | Filter by inventory balance end date |\n\n**Description of response parameters**\n\n| **Parameter** | **Data type** | **Description** |\n| --- | --- | --- |\n| balance | array | Array with inventory balance data |\n| date | date(dd.mm.yyyy) | The date of inventory balance. (Date works with one-day principle) |\n| warehouse_id | number | Warehouse ID |\n| warehouse_code | string | Warehouse code |\n| product_code | string | Inventory code |\n| product_id | number | Inventory ID |\n| card_code | string | Card code of inventory. In case there are the same 2 card codes of inventories found, system will count as 1. |\n| expiry_date | date(dd.mm.yyyy) | Expiry date of inventory. In case there are the same 2 expiry dates of inventories found, system will count as 1 |\n| serial_number | string | Serial number |\n| inventory_kind | string | Type of goods and materials ( P - products, G - goods, M - raw materials). Type of goods and materials specifies the category of ownership |\n| quantity | number | Quantity of inventories in balance |\n| input_price | number | Input price |\n| measure_code | string | Measurement code |\n| groups | array | Array with groups of inventory balance |\n| group_code | string | Group code |\n| type_code | string | Type code |\n\n**Note**: All IDs and codes mentioned in response parameters are assigned by Smartup system."
			},
			"response": []
		},
		{
			"name": "Cash Operations / Import",
			"id": "a2088dec-02d2-4d36-9b96-9323c6c2a815",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cash_operation\": [\r\n        {\r\n            \"filial_code\": \"\",\r\n            \"external_id\": \"\",\r\n            \"operation_id\": \"\",\r\n            \"operation_date\": \"\",\r\n            \"operation_number\": \"\",\r\n            \"subfilial_code\": \"\",\r\n            \"posted\": \"\",\r\n            \"cashbox_code\": \"\",\r\n            \"cashflow_reason_code\": \"\",\r\n            \"cashflow_kind\": \"\",\r\n            \"corr_coa_code\": \"\",\r\n            \"corr_person_code\": \"\",\r\n            \"currency_code\": \"\",\r\n            \"amount\": \"\"\r\n            \"responsible_person_code\": \"\"\r\n            \"collector_code\": \"\"\r\n            \"note\": \"\"\r\n            \"ref_codes\": [\r\n                {\r\n                    \"ref_type\": \"\",\r\n                    \"ref_id\": \"\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkcs/cash_operation$import",
				"description": "The service imports cash operations data according to the parameter values passed to the service in the request. This interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n    \"cash_operation\": [\n        {\n            \"filial_code\": \"\",\n            \"external_id\": \"\",\n            \"operation_id\": \"\",\n            \"operation_date\": \"\",\n            \"operation_number\": \"\",\n            \"subfilial_code\": \"\",\n            \"posted\": \"\",\n            \"cashbox_code\": \"\",\n            \"cashflow_reason_code\": \"\",\n            \"cashflow_kind\": \"\",\n            \"corr_coa_code\": \"\",\n            \"corr_person_code\": \"\",\n            \"currency_code\": \"\",\n            \"amount\": \"\",\n            \"responsible_person_code\": \"\",\n            \"collector_code\": \"\",\n            \"note\": \"\",\n            \"ref_codes\": [\n                {\n                    \"ref_type\": \"\",\n                    \"ref_id\": \"\"\n                }\n            ]\n        }\n    ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data Type | Required | Description |\n| --- | --- | --- | --- |\n| cash_operation | array | yes | Array with data of cash operations |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Cash operation ID assigned by third party software |\n| operation_id | number | no | Cash operation ID assigned by Smartup |\n| operation_date | date(dd.mm.yyyy) | yes | Cash operation date |\n| operation_number | string | no | Cash operation number |\n| subfilial_code | string | no | Project code |\n| posted | string | yes | Whether cash operation is posted or not (Y - yes, N - no) |\n| cashbox_code | string | yes | Cash register code |\n| cashflow_reason_code | string | yes | Trasaction type code |\n| cashflow_kind | string | yes | Document type |\n| corr_coa_code | string | yes | Account code |\n| corr_person_code | string | no | Counterparty code |\n| currency_code | string | yes | Currency code |\n| amount | number | yes | Amount |\n| responsible_person_code | string | no | Accountable person code |\n| collector_code | string | no | Collector code |\n| note | string | no | Note |\n| ref_codes | array | no | Array with static data of subcounts. All subcounts mentioned in the \"Subcounts\" table. |\n| ref_type | string | no | Subcount |\n| ref_id | string | no | Subcount ID |\n\nBefore sending, the service checks the request for:\n\n- the presence of mandatory parameters\n- parameter validity\n    \n\nIf all checks are passed successfully, the service will return the relevant information for each parameter.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |\n\n**Subcounts**\n\n| ref_type | ref_type_name | id/code |\n| --- | --- | --- |\n| 1010 | Лицо | code |\n| 1011 | Договор | code |\n| 1012 | Тип оплаты | code |\n| 1013 | Склад | code |\n| 1014 | Продукт | code |\n| 1015 | Состояние продукта | static. There are two arguments can be applied:  <br>\\- If argument = 1 (available)  <br>\\- If argument = 2 (booked) |\n| 1016 | Партия | not supported yet |\n| 1017 | Серия | card_code |\n| 1018 | Дата | dd.mm.yyyy |\n| 1019 | Касса | code |\n| 1020 | Расчетный счет | BANK_ACCOUNT_code |\n| 1021 | Вид движения | code |\n| 1022 | Статья доходов | code |\n| 1023 | Статья расходов | code |\n| 1024 | Автолавка | code |\n| 1025 | Дополнительный расход | id |\n| 1026 | Приход | id |\n| 1027 | Списание | id |\n| 1028 | Корректировка | id |\n| 1029 | Заказ | id |\n| 1030 | Перекидка денежных средств | transfer_number |\n| 1031 | Конвертация валюты | id |\n| 1032 | Производство | id |\n| 1033 | Начальные остатки продуктов | id |\n| 1034 | Subfilial | code |\n| 1035 | Цена | not supported yet |\n| 1036 | Состояние оплаты начислений | static. There are two arguments can be applied:  <br>\\- If argument = 1 (available)  <br>\\- If argument = 2 (booked) |\n| 1037 | Закуп | id |\n| 1038 | Возврат поставщику | id |\n| 1039 | Подразделение | code |\n| 1040 | Должности | serial_number |\n| 1041 | Серийный номер | id |\n| 1042 | Поврежденное оборудование | id |\n| 1043 | Изначальный баланс клиента по оборудованию | id |\n| 1044 | Конвертация валюты банковских счетах | code |\n| 1045 | Документы чековой книжки | id |"
			},
			"response": []
		},
		{
			"name": "Cash Operations / Export",
			"id": "3731d216-b52b-4897-bcfb-67fb6b611d7e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"operation_id\": \"\",\r\n  \"begin_operation_date\": \"\",\r\n  \"end_operation_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkcs/cash_operation$export",
				"description": "Through the interface, the service exports data on cash operations for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"operation_id\": \"\",\n  \"begin_operation_date\": \"\",\n  \"end_operation_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"cash_operation\": [\n        {\n            \"filial_code\": \"\",\n            \"external_id\": \"\",\n            \"operation_id\": \"\",\n            \"operation_date\": \"\",\n            \"operation_number\": \"\",\n            \"subfilial_code\": \"\",\n            \"posted\": \"\",\n            \"cashbox_code\": \"\",\n            \"cashflow_reason_code\": \"\",\n            \"cashflow_kind\": \"\",\n            \"corr_coa_code\": \"\",\n            \"corr_person_code\": \"\",\n            \"currency_code\": \"\",\n            \"amount\": \"\"\n            \"responsible_person_code\": \"\"\n            \"collector_code\": \"\"\n            \"note\": \"\"\n            \"ref_codes\": [\n                {\n                    \"ref_type\": \"\",\n                    \"ref_id\": \"\"\n                }\n            ]\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Cash operation ID assigned by third party software |\n| operation_id | number | no | Cash operation ID, in the Smartup system |\n| begin_operation_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by cash operation begin date |\n| end_operation_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by cash operation end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data Type | Description |\n| --- | --- | --- |\n| cash_operation | array | Array with data of cash operations |\n| filial_code | string | Organization unique code |\n| external_id | string | Cash operation ID assigned by third party software |\n| operation_id | number | Cash operation ID assigned by Smartup |\n| operation_date | date(dd.mm.yyyy) | Cash operation date |\n| operation_number | string | Cash operation number |\n| subfilial_code | string | Project code |\n| posted | string | Whether cash operation is posted or not (Y - yes, N - no) |\n| cashbox_code | string | Cash register code |\n| cashflow_reason_code | string | Trasaction type code |\n| cashflow_kind | string | Document type |\n| corr_coa_code | string | Account code |\n| corr_person_code | string | Counterparty code |\n| currency_code | string | Currency code |\n| amount | number | Amount |\n| responsible_person_code | string | Accountable person code |\n| collector_code | string | Collector code |\n| note | string | Note |\n| ref_codes | array | Array with static data of subcounts. All subcounts mentioned in the \"Subcounts\" table. |\n| ref_type | string | Subcount |\n| ref_id | string | Subcount ID |\n\n**Subcounts**\n\n| ref_type | ref_type_name | id/code |\n| --- | --- | --- |\n| 1010 | Лицо | code |\n| 1011 | Договор | code |\n| 1012 | Тип оплаты | code |\n| 1013 | Склад | code |\n| 1014 | Продукт | code |\n| 1015 | Состояние продукта | static. There are two arguments can be applied:  <br>\\- If argument = 1 (available)  <br>\\- If argument = 2 (booked) |\n| 1016 | Партия | not supported yet |\n| 1017 | Серия | card_code |\n| 1018 | Дата | dd.mm.yyyy |\n| 1019 | Касса | code |\n| 1020 | Расчетный счет | BANK_ACCOUNT_code |\n| 1021 | Вид движения | code |\n| 1022 | Статья доходов | code |\n| 1023 | Статья расходов | code |\n| 1024 | Автолавка | code |\n| 1025 | Дополнительный расход | id |\n| 1026 | Приход | id |\n| 1027 | Списание | id |\n| 1028 | Корректировка | id |\n| 1029 | Заказ | id |\n| 1030 | Перекидка денежных средств | transfer_number |\n| 1031 | Конвертация валюты | id |\n| 1032 | Производство | id |\n| 1033 | Начальные остатки продуктов | id |\n| 1034 | Subfilial | code |\n| 1035 | Цена | not supported yet |\n| 1036 | Состояние оплаты начислений | static. There are two arguments can be applied:  <br>\\- If argument = 1 (available)  <br>\\- If argument = 2 (booked) |\n| 1037 | Закуп | id |\n| 1038 | Возврат поставщику | id |\n| 1039 | Подразделение | code |\n| 1040 | Должности | serial_number |\n| 1041 | Серийный номер | id |\n| 1042 | Поврежденное оборудование | id |\n| 1043 | Изначальный баланс клиента по оборудованию | id |\n| 1044 | Конвертация валюты банковских счетах | code |\n| 1045 | Документы чековой книжки | id |"
			},
			"response": []
		},
		{
			"name": "Bank Statements / Import",
			"id": "e998b880-5c53-40ab-876b-47baae2fedd9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bank_operation\" : [\r\n        {\r\n            \"filial_code\": \"\",\r\n            \"external_id\": \"\",\r\n            \"operation_id\": \"\",\r\n            \"subfilial_id\": \"\",\r\n            \"posted\": \"\",\r\n            \"operation_date\": \"\",\r\n            \"operation_number\": \"\",\r\n            \"bank_trans_number\": \"\",\r\n            \"bank_trans_date\": \"\",\r\n            \"bank_account_code\": \"\",\r\n            \"cashflow_reason_code\": \"\",\r\n            \"cashflow_kind\": \"\",\r\n            \"corr_coa_code\": \"\",\r\n            \"corr_person_code\": \"\",\r\n            \"corr_bank_account_code\": \"\",\r\n            \"currency_code\": \"\",\r\n            \"amount\": \"\",\r\n            \"payment_code\": \"\",\r\n            \"purpose\": \"\",\r\n            \"responsible_person_code\" : \"\",\r\n            \"note\": \"\",\r\n            \"ref_codes\": [\r\n                {\r\n                    \"ref_type\": \"\",\r\n                    \"ref_id\":\"\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkcs/bank_operation$import",
				"description": "StartFragment\n\nThe interface allows you to upload bank statements data from third-party software to the Smartup. This interface supports bulk data ingestion in a single request\n\nEndFragment\n\n**Request**\n\n``` json\n{\n    \"bank_operation\" : [\n        {\n            \"filial_code\": \"\",\n            \"external_id\": \"\",\n            \"operation_id\": \"\",\n            \"subfilial_id\": \"\",\n            \"posted\": \"\",\n            \"operation_date\": \"\",\n            \"operation_number\": \"\",\n            \"bank_trans_number\": \"\",\n            \"bank_trans_date\": \"\",\n            \"bank_account_code\": \"\",\n            \"cashflow_reason_code\": \"\",\n            \"cashflow_kind\": \"\",\n            \"corr_coa_code\": \"\",\n            \"corr_person_code\": \"\",\n            \"corr_bank_account_code\": \"\",\n            \"currency_code\": \"\",\n            \"amount\": \"\",\n            \"payment_code\": \"\",\n            \"purpose\": \"\",\n            \"responsible_person_code\" : \"\",\n            \"note\": \"\",\n            \"ref_codes\": [\n                {\n                    \"ref_type\": \"\",\n                    \"ref_id\":\"\"\n                }\n            ]\n        }\n    ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n  \"successes\": [\n    {\n      \"code\": \"\"\n    }\n  ],\n  \"errors\": [\n  ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| bank_operation | array | yes | Array with data of bank statements |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Bank statement ID assigned by third party software |\n| operation_id | number | no | Bank statement ID assigned by Smartup |\n| subfilial_code | string | no | Project code |\n| posted | string | yes | Whether bank statement is posted or not (Y - yes, N - no) |\n| operation_date | date(dd.mm.yyyy) | yes | Bank statement operation date |\n| operation_number | string | no | Bank statement operation number |\n| bank_trans_number | string | no | Transfer No. |\n| bank_trans_date | date(dd.mm.yyyy) | no | Transer Date |\n| bank_account_code | string | yes | Currenct account code |\n| cashflow_reason_code | string | yes | Trasaction type code |\n| cashflow_kind | string | yes | Document type |\n| corr_coa_code | string | yes | Account code |\n| corr_person_code | string | no | Counterparty code |\n| corr_bank_account_code | string | no | Counterparty current account |\n| currency_code | string | yes | Currency code |\n| amount | number | yes | Amount |\n| payment_code | string | no | Payment code |\n| purpose | string | no | Payment details |\n| responsible_person_code | string | no | Accountable person code |\n| note | string | no | Note |\n| ref_codes | array | no | Array with data of subcounts |\n| ref_type | string | no | Subcount |\n| ref_id | string | no | Subcount ID |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |\n\n**Subcounts**\n\n| ref_type | ref_type_name | id/code |\n| --- | --- | --- |\n| 1010 | Лицо | code |\n| 1011 | Договор | code |\n| 1012 | Тип оплаты | code |\n| 1013 | Склад | code |\n| 1014 | Продукт | code |\n| 1015 | Состояние продукта | static. There are two arguments can be applied:  <br>\\- If argument = 1 (available)  <br>\\- If argument = 2 (booked) |\n| 1016 | Партия | not supported yet |\n| 1017 | Серия | card_code |\n| 1018 | Дата | dd.mm.yyyy |\n| 1019 | Касса | code |\n| 1020 | Расчетный счет | BANK_ACCOUNT_code |\n| 1021 | Вид движения | code |\n| 1022 | Статья доходов | code |\n| 1023 | Статья расходов | code |\n| 1024 | Автолавка | code |\n| 1025 | Дополнительный расход | id |\n| 1026 | Приход | id |\n| 1027 | Списание | id |\n| 1028 | Корректировка | id |\n| 1029 | Заказ | id |\n| 1030 | Перекидка денежных средств | transfer_number |\n| 1031 | Конвертация валюты | id |\n| 1032 | Производство | id |\n| 1033 | Начальные остатки продуктов | id |\n| 1034 | Subfilial | code |\n| 1035 | Цена | not supported yet |\n| 1036 | Состояние оплаты начислений | static. There are two arguments can be applied:  <br>\\- If argument = 1 (available)  <br>\\- If argument = 2 (booked) |\n| 1037 | Закуп | id |\n| 1038 | Возврат поставщику | id |\n| 1039 | Подразделение | code |\n| 1040 | Должности | serial_number |\n| 1041 | Серийный номер | id |\n| 1042 | Поврежденное оборудование | id |\n| 1043 | Изначальный баланс клиента по оборудованию | id |\n| 1044 | Конвертация валюты банковских счетах | code |\n| 1045 | Документы чековой книжки | id |"
			},
			"response": []
		},
		{
			"name": "Bank Statements / Export",
			"id": "fa5da656-e5b0-4339-9177-feed532f9253",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"operation_id\": \"\",\r\n  \"begin_operation_date\": \"\",\r\n  \"end_operation_date\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mkcs/bank_operation$export",
				"description": "Through the interface, the service exports data on bank statements for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"operation_id\": \"\",\n  \"begin_operation_date\": \"\",\n  \"end_operation_date\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\nResponse\n\n``` json\n{\n    \"bank_operation\" : [\n        {\n            \"filial_code\": \"\",\n            \"external_id\": \"\",\n            \"operation_id\": \"\",\n            \"subfilial_id\": \"\",\n            \"posted\": \"\",\n            \"operation_date\": \"\",\n            \"operation_number\": \"\",\n            \"bank_trans_number\": \"\",\n            \"bank_trans_date\": \"\",\n            \"bank_account_code\": \"\",\n            \"cashflow_reason_code\": \"\",\n            \"cashflow_kind\": \"\",\n            \"corr_coa_code\": \"\",\n            \"corr_person_code\": \"\",\n            \"corr_bank_account_code\": \"\",\n            \"currency_code\": \"\",\n            \"amount\": \"\",\n            \"payment_code\": \"\",\n            \"purpose\": \"\",\n            \"responsible_person_code\" : \"\",\n            \"note\": \"\",\n            \"ref_codes\": [\n                {\n                    \"ref_type\": \"\",\n                    \"ref_id\":\"\"\n                }\n            ]\n        }\n    ]\n}\n\n```\n\n**Description pf request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| filial_code | string | no | Organization unique code |\n| external_id | string | no | Bank statement ID assigned by third party software |\n| operation_id | number | no | Bank statement ID, in the Smartup system |\n| begin_operation_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by bank statement begin date |\n| end_operation_date | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by bank statement end date |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by date of modification |\n| end_modified_on | date(dd.mm.yyyy hh24:mi:ss) | no | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| bank_operation | array | Array with data of bank statements |\n| filial_code | string | Organization unique code |\n| external_id | string | Bank statement ID assigned by third party software |\n| operation_id | number | Bank statement ID assigned by Smartup |\n| subfilial_code | string | Project code |\n| posted | string | Whether bank statement is posted or not (Y - yes, N - no) |\n| operation_date | date(dd.mm.yyyy) | Bank statement operation date |\n| operation_number | string | Bank statement operation number |\n| bank_trans_number | string | Transfer No. |\n| bank_trans_date | date(dd.mm.yyyy) | Transer Date |\n| bank_account_code | string | Currenct account code |\n| cashflow_reason_code | string | Trasaction type code |\n| cashflow_kind | string | Document type |\n| corr_coa_code | string | Account code |\n| corr_person_code | string | Counterparty code |\n| corr_bank_account_code | string | Counterparty current account |\n| currency_code | string | Currency code |\n| amount | number | Amount |\n| payment_code | string | Payment code |\n| purpose | string | Payment details |\n| responsible_person_code | string | Accountable person code |\n| note | string | Note |\n| ref_codes | array | Array with data of subcounts |\n| ref_type | string | Subcount |\n| ref_id | string | Subcount ID |\n\n**Subcounts**\n\n| ref_type | ref_type_name | id/code |\n| --- | --- | --- |\n| 1010 | Лицо | code |\n| 1011 | Договор | code |\n| 1012 | Тип оплаты | code |\n| 1013 | Склад | code |\n| 1014 | Продукт | code |\n| 1015 | Состояние продукта | static. There are two arguments can be applied:  <br>\\- If argument = 1 (available)  <br>\\- If argument = 2 (booked) |\n| 1016 | Партия | not supported yet |\n| 1017 | Серия | card_code |\n| 1018 | Дата | dd.mm.yyyy |\n| 1019 | Касса | code |\n| 1020 | Расчетный счет | BANK_ACCOUNT_code |\n| 1021 | Вид движения | code |\n| 1022 | Статья доходов | code |\n| 1023 | Статья расходов | code |\n| 1024 | Автолавка | code |\n| 1025 | Дополнительный расход | id |\n| 1026 | Приход | id |\n| 1027 | Списание | id |\n| 1028 | Корректировка | id |\n| 1029 | Заказ | id |\n| 1030 | Перекидка денежных средств | transfer_number |\n| 1031 | Конвертация валюты | id |\n| 1032 | Производство | id |\n| 1033 | Начальные остатки продуктов | id |\n| 1034 | Subfilial | code |\n| 1035 | Цена | not supported yet |\n| 1036 | Состояние оплаты начислений | static. There are two arguments can be applied:  <br>\\- If argument = 1 (available)  <br>\\- If argument = 2 (booked) |\n| 1037 | Закуп | id |\n| 1038 | Возврат поставщику | id |\n| 1039 | Подразделение | code |\n| 1040 | Должности | serial_number |\n| 1041 | Серийный номер | id |\n| 1042 | Поврежденное оборудование | id |\n| 1043 | Изначальный баланс клиента по оборудованию | id |\n| 1044 | Конвертация валюты банковских счетах | code |\n| 1045 | Документы чековой книжки | id |"
			},
			"response": []
		},
		{
			"name": "Order Status Change",
			"id": "785a731d-2ab8-402c-ae52-b42143c94f4c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"order\": [\r\n      {\r\n      \"deal_id\": \"642\",\r\n      \"status\": \"A\"\r\n      }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/trade/txs/tdeal/order$change_status",
				"description": "This interface allows you to change the status of orders.\n\n**Request**\n\n``` json\n{\n  \"order\": [\n      {\n      \"deal_id\": \"642\",\n      \"status\": \"A\"\n      }\n  ]\n}\n\n```\n\n**Response**\n\n``` json\n{\n  \"successes\": [\n    {\n      \"code\": \"\"\n    }\n  ],\n  \"errors\": [\n  ]\n}\n\n```\n\n**Discription of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| order | array | yes | Array with order data that is used to change status afterwards |\n| deal_id | number | yes | Order ID |\n| status | string | yes | Order status (Y - yes, N - no) |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Order Attach Marking Codes",
			"id": "97a98391-3d33-4f5b-ac01-269a5cf06874",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"deal_id\": \"\",\r\n    \"products\": [\r\n        {\r\n            \"product_unit_id\": \"\",\r\n            \"marking_codes\": [\"\"]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mdeal/order$import_order_marking_codes",
				"description": "This interface allows you to attach marking codes for order.\n\n**Request**\n\n``` json\n{\n    \"deal_id\": \"\",\n    \"products\": [\n        {\n            \"product_unit_id\": \"\",\n            \"marking_codes\": [\"\"]\n        }\n    ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n  \"successes\": [\n    {\n      \"code\": \"\"\n    }\n  ],\n  \"errors\": [\n  ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| deal_id | number | yes | Order ID in the Smartup system |\n| products | array | yes | Array with data about of goods and materials in the order |\n| product_unit_id | number | yes | Order Item ID |\n| marking_codes | string | yes | Array with data of attaching marking codes for product unit |\n\n**Desctiption of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Cross-organizational Movement Status Change",
			"id": "a55638e6-f6ce-4c8f-b7cc-0e842791ef56",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"movement\": [\r\n      {\r\n      \"movement_id\" : \"\",\r\n      \"status\": \"\"\r\n      }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mfm/movement$change_status",
				"description": "This interface allows you to change the status of cross-organizational movements.\n\n**Request**\n\n``` json\n{\n  \"movement\": [\n      {\n      \"movement_id\" : \"\",\n      \"status\": \"\"\n      }\n  ]\n}\n\n ```\n\n**Response**\n\n``` json\n{\n  \"successes\": [\n    {\n      \"code\": \"\"\n    }\n  ],\n  \"errors\": [\n  ]\n}\n\n ```\n\n**Description of request parameters**\n\n| Parameter | Data type | Required | Description |\n| --- | --- | --- | --- |\n| movement | array | yes | Array with movement data that is used to change status afterwards |\n| movement_id | number | yes | Movement ID |\n| status | string | yes | Movement status (  <br>D - Draft  <br>N - New  <br>W - Waiting  <br>S - Sent  <br>A - Approved  <br>R - Returned  <br>C - Completed  <br>L - Cancelled) |\n\n**Desctiption of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique record code |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Cross-organizational Movement / Import",
			"id": "58ecd622-1742-41cf-b09d-777d019136a7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movement\": [\r\n        {\r\n            \"from_filial_code\": \"\",\r\n            \"external_id\": \"\",\r\n            \"movement_id\": \"\",\r\n            \"subfilial_code\": \"\",\r\n            \"from_room_code\": \"\",\r\n            \"from_robot_code\": \"\",\r\n            \"from_robot_person_code\": \"\",\r\n            \"from_warehouse_code\": \"\",\r\n            \"from_time\": \"\",\r\n            \"to_filial_code\": \"\",\r\n            \"to_warehouse_code\": \"\",\r\n            \"to_time\": \"\",\r\n            \"currency_code\": \"\",\r\n            \"price_type_code\": \"\",\r\n            \"payment_type_code\": \"\",\r\n            \"request_id\": \"\",\r\n            \"reason_id\": \"\",\r\n            \"note\": \"\",\r\n            \"barcode\": \"\",\r\n            \"amount\": \"\",\r\n            \"amount_base\": \"\",\r\n            \"delivery_number\": \"\",\r\n            \"contract_code\": \"\",\r\n            \"status\": \"\",\r\n            \"movement_items\": [\r\n                {\r\n                    \"external_id\": \"\",\r\n                    \"movement_unit_id\": \"\",\r\n                    \"request_item_id\": \"\",\r\n                    \"from_inventory_kind\": \"\",\r\n                    \"on_balance\": \"\",\r\n                    \"to_inventory_kind\": \"\",\r\n                    \"product_code\": \"\",\r\n                    \"card_code\": \"\",\r\n                    \"expiry_date\": \"\",\r\n                    \"serial_number\": \"\",\r\n                    \"quantity\": \"\",\r\n                    \"price\": \"\",\r\n                    \"amount\": \"\",\r\n                    \"amount_base\": \"\",\r\n                    \"margin_kind\": \"\",\r\n                    \"margin_value\": \"\",\r\n                    \"margin_amount\": \"\",\r\n                    \"vat_percent\": \"\",\r\n                    \"vat_amount\": \"\",\r\n                    \"load_id\": \"\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mfm/movement$import",
				"description": "This interface uploads cross-organization movements data to the Smartup X from third party software. The interface supports bulk data ingestion in a single request.\n\n**Request**\n\n``` json\n{\n    \"movement\": [\n        {\n            \"from_filial_code\": \"\",\n            \"external_id\": \"\",\n            \"movement_id\": \"\",\n            \"subfilial_code\": \"\",\n            \"from_room_code\": \"\",\n            \"from_robot_code\": \"\",\n            \"from_robot_person_code\": \"\",\n            \"from_warehouse_code\": \"\",\n            \"from_time\": \"\",\n            \"to_filial_code\": \"\",\n            \"to_warehouse_code\": \"\",\n            \"to_time\": \"\",\n            \"currency_code\": \"\",\n            \"price_type_code\": \"\",\n            \"payment_type_code\": \"\",\n            \"request_id\": \"\",\n            \"reason_id\": \"\",\n            \"note\": \"\",\n            \"barcode\": \"\",\n            \"amount\": \"\",\n            \"amount_base\": \"\",\n            \"delivery_number\": \"\",\n            \"contract_code\": \"\",\n            \"status\": \"\",\n            \"movement_items\": [\n                {\n                    \"external_id\": \"\",\n                    \"movement_unit_id\": \"\",\n                    \"request_item_id\": \"\",\n                    \"from_inventory_kind\": \"\",\n                    \"on_balance\": \"\",\n                    \"to_inventory_kind\": \"\",\n                    \"product_code\": \"\",\n                    \"card_code\": \"\",\n                    \"expiry_date\": \"\",\n                    \"serial_number\": \"\",\n                    \"quantity\": \"\",\n                    \"price\": \"\",\n                    \"amount\": \"\",\n                    \"amount_base\": \"\",\n                    \"margin_kind\": \"\",\n                    \"margin_value\": \"\",\n                    \"margin_amount\": \"\",\n                    \"vat_percent\": \"\",\n                    \"vat_amount\": \"\",\n                    \"load_id\": \"\"\n                }\n            ]\n        }\n    ]\n}\n\n```\n\n**Response**\n\n``` json\n    \"successes\": [\n        {\n            \"code\": \"\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": \"\",\n            \"message\": \"\"\n        }\n    ]\n}\n\n```\n\n**Description of request parameters**\n\n| Parameter | Data type | **Required** | Description |\n| --- | --- | --- | --- |\n| movement | array | yes | Array with data on the interorganizational movement (information about the move itself) |\n| filial_code | string | no | Organization code of searching movement |\n| from_filial_code | string | yes | Organization of movement (sender) |\n| external_id | string | no | Movement ID assigned by third party software |\n| movement_id | number | no | Movement ID assigned by Smartup |\n| subfilial_code | string | no | Project code |\n| from_room_code | string | yes | Workspace code (sender) |\n| from_robot_code | string | yes | Staff Unit code (sender) |\n| from_robot_person_code | string | yes | User code (sender) |\n| from_warehouse_code | string | yes | Warehouse code (sender) |\n| from_time | date(dd.mm.yyyy hh24:mi:ss) | yes | Time of sending movement |\n| to_filial_code | string | yes | Organization code (recipient) |\n| to_warehouse_code | string | no | Warehouse code (recipient) |\n| to_time | date(dd.mm.yyyy hh24:mi:ss) | no | Time of receiving movement to another organization |\n| currency_code | string | yes | Currency code |\n| price_type_code | string | yes | Price type code |\n| payment_type_code | string | no | Payment type code |\n| request_id | number | no | Request ID |\n| reason_id | number | no | Reason ID |\n| note | string | no | Note |\n| amount | number | no | Amount of sending inventories |\n| delivery_number | string | no | Delivery No. |\n| contract_code | string | no | Contract code |\n| status | string | no | Status of the inventories  <br>D - Draft  <br>N - New  <br>W - Waiting  <br>S - Sent  <br>A - Approved  <br>R - Returned  <br>C - Completed  <br>L - Cancelled |\n| movement_items | array | yes | Array with data of movement items |\n| external_id | number | no | Movement ID assigned by third party software |\n| movement_unit_id | number | no | ID of movement inventory |\n| request_item_id | number | no | ID of movement inventory in request |\n| from_inventory_kind | string | yes | Inventory type (sender) |\n| on_balance | string | no | The term that determines whether the balance sheet is Off or On. The parameter takes two statuses. (Y - yes, N - no) |\n| to_inventory_kind | string | no | Inventory type (recipient) |\n| product_code | string | yes | Inventory code |\n| card_code | string | no | Card code |\n| expiry_date | date(dd.mm.yyyy) | no | Inventory expiry date |\n| serial_number | string | no | Serial number of inventory |\n| quantity | number | yes | Inventory Qty |\n| price | number | yes | Inventory price |\n| margin_kind | string | yes | Margin type (markup or discount) |\n| margin_value | number | yes | Margin value |\n| vat_percent | number | yes | VAT % |\n| vat_amount | number | no | VAT amount |\n| load_id | number | no | Tie-in ID |\n\n**sender** - the term, which determines sender of any entity. For instance, Organization (sender) means that movement is going to be sent from that Organization.\n\n**recipient** - the term, which determines recipient of any entity. For instance, Warehouse (recipient) means that movement is going to be sent to this warehouse.\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| successes | array | Array of successfully processed data |\n| errors | array | Array data with errors |\n| code | string | Unique code records |\n| message | string | Clarifying error messages from the server |"
			},
			"response": []
		},
		{
			"name": "Cross-organizational Movement / Export",
			"id": "dd8a5e55-a4a7-4533-ac78-38618b0f99dd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "greenwhite",
						"username": "admin@test"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"filial_codes\": [\r\n    {\r\n      \"filial_code\": \"\"\r\n    }\r\n  ],\r\n  \"filial_code\": \"\",\r\n  \"external_id\": \"\",\r\n  \"movement_id\": \"\",\r\n  \"begin_created_on\": \"\",\r\n  \"end_created_on\": \"\",\r\n  \"begin_modified_on\": \"\",\r\n  \"end_modified_on\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://smartup.online/b/anor/mxsx/mfm/movement$export",
				"description": "The service exports data on cross-organizational movements for a certain period in accordance with the values of the parameters passed to the service in the request. This interface supports bulk sending of data in one request.\n\n**Request**\n\n``` json\n{\n  \"filial_codes\": [\n    {\n      \"filial_code\": \"\"\n    }\n  ],\n  \"filial_code\": \"\",\n  \"external_id\": \"\",\n  \"movement_id\": \"\",\n  \"begin_created_on\": \"\",\n  \"end_created_on\": \"\",\n  \"begin_modified_on\": \"\",\n  \"end_modified_on\": \"\"\n}\n\n```\n\n**Response**\n\n``` json\n{\n    \"movement\": [\n        {\n            \"from_filial_code\": \"\",\n            \"external_id\": \"\",\n            \"movement_id\": \"\",\n            \"subfilial_code\": \"\",\n            \"from_room_code\": \"\",\n            \"from_robot_code\": \"\",\n            \"from_robot_person_code\": \"\",\n            \"from_warehouse_code\": \"\",\n            \"from_time\": \"\",\n            \"to_filial_code\": \"\",\n            \"to_warehouse_code\": \"\",\n            \"to_time\": \"\",\n            \"currency_code\": \"\",\n            \"price_type_code\": \"\",\n            \"payment_type_code\": \"\",\n            \"request_id\": \"\",\n            \"reason_id\": \"\",\n            \"note\": \"\",\n            \"barcode\": \"\",\n            \"amount\": \"\",\n            \"amount_base\": \"\",\n            \"delivery_number\": \"\",\n            \"contract_code\": \"\",\n            \"status\": \"\",\n            \"movement_items\": [\n                {\n                    \"external_id\": \"\",\n                    \"movement_unit_id\": \"\",\n                    \"request_item_id\": \"\",\n                    \"from_inventory_kind\": \"\",\n                    \"on_balance\": \"\",\n                    \"to_inventory_kind\": \"\",\n                    \"product_code\": \"\",\n                    \"card_code\": \"\",\n                    \"expiry_date\": \"\",\n                    \"serial_number\": \"\",\n                    \"quantity\": \"\",\n                    \"price\": \"\",\n                    \"amount\": \"\",\n                    \"amount_base\": \"\",\n                    \"margin_kind\": \"\",\n                    \"margin_value\": \"\",\n                    \"margin_amount\": \"\",\n                    \"vat_percent\": \"\",\n                    \"vat_amount\": \"\",\n                    \"load_id\": \"\"\n                }\n            ]\n        }\n    ]\n}\n\n```\n\nDescription of request parameters\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| filial_codes | array | Array with data of organizations involved in the movement \\* |\n| filial_code | string | Organization unique code |\n| external_id | string | Movement ID assigned by third party software |\n| movement_id | number | Movement ID assigned by Smartup |\n| begin_created_on | date(dd.mm.yyyy hh24:mi:ss) | Filter by creation date |\n| end_created_on | date(dd.mm.yyyy hh24:mi:ss) | Filter by last creation date |\n| begin_modified_on | date(dd.mm.yyyy hh24:mi:ss) | Filter by date of modification |\n| end_modified_on | date dd.mm.yyyy hh24:mi:ss) | Filter by last modified date |\n\n**Description of response parameters**\n\n| Parameter | Data type | Description |\n| --- | --- | --- |\n| movement | array | Array with data on the interorganizational movement (information about the move itself) |\n| from_filial_code | string | Organization of movement (sender) |\n| external_id | string | Movement ID assigned by third party software |\n| movement_id | number | Movement ID assigned by Smartup |\n| subfilial_code | string | Project code |\n| from_room_code | string | Workspace code (sender) |\n| from_robot_code | string | Staff Unit code (sender) |\n| from_robot_person_code | string | User code (sender) |\n| from_warehouse_code | string | Warehouse code (sender) |\n| from_time | date(dd.mm.yyyy hh24:mi:ss) | Time of sending movement |\n| to_filial_code | string | Organization code (recipient) |\n| to_warehouse_code | string | Warehouse code (recipient) |\n| to_time | date(dd.mm.yyyy hh24:mi:ss) | Time of receiving movement to another organization |\n| currency_code | string | Currency code |\n| price_type_code | string | Price type code |\n| payment_type_code | string | Payment type code |\n| request_id | number | Request ID |\n| reason_id | number | Reason ID |\n| note | string | Note |\n| barcode | string | Barcode |\n| amount | number | Amount of sending inventories |\n| amount_base | number | Base Amount |\n| delivery_number | string | Delivery No. |\n| contract_code | string | Contract code |\n| status | string | Status of the inventories  <br>D - Draft  <br>N - New  <br>W - Waiting  <br>S - Sent  <br>A - Approved  <br>R - Returned  <br>C - Completed  <br>L - Cancelled |\n| movement_items | array | Array with data of movement items |\n| external_id | number | Movement ID assigned by third party software |\n| movement_unit_id | number | ID of movement inventory |\n| request_item_id | number | ID of movement inventory in request |\n| from_inventory_kind | string | Inventory type (sender) |\n| on_balance | string | The term that determines whether the balance sheet is Off or On. The parameter takes two statuses. (Y - yes, N - no) |\n| to_inventory_kind | string | Inventory type (recipient) |\n| product_code | string | Inventory code |\n| card_code | string | Card code |\n| expiry_date | date(dd.mm.yyyy) | Inventory expiry date |\n| serial_number | string | Serial number of inventory |\n| quantity | number | Inventory Qty |\n| price | number | Inventory price |\n| amount | number | Inventory amount |\n| amount_base | number | Inventory base amount |\n| margin_kind | string | Margin type (markup or discount) |\n| margin_value | number | Margin value |\n| margin_amount | number | Margin amount |\n| vat_percent | number | VAT % |\n| vat_amount | number | VAT amount |\n| load_id | number | Tie-in ID |\n\n**sender** - the term, which determines sender of any entity. For instance, Organization (sender) means that movement is going to be sent from that Organization.\n\n**recipient** - the term, which determines recipient of any entity. For instance, Warehouse (recipient) means that movement is going to be sent to this warehouse."
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": {
			"username": "admin@test",
			"password": "greenwhite"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1f275504-b7ef-425d-940d-99db80417565",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0a7d1252-0108-4ce7-818a-d26de75d6bd2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "d8f233d0-1b02-4056-b139-0b0e6d48cc05",
			"value": "",
			"type": "string"
		}
	]
}